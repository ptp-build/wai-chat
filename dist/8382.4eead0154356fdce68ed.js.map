{"version":3,"file":"8382.4eead0154356fdce68ed.js","mappings":"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","sources":["webpack://wai/./src/components/calls/group/GroupCallTopPane.tsx","webpack://wai/./src/components/common/AnimatedCounter.module.scss?3640","webpack://wai/./src/components/common/AnimatedCounter.tsx","webpack://wai/./src/components/common/AnimatedIconFromSticker.tsx","webpack://wai/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://wai/./src/components/common/AnimatedIconWithPreview.tsx","webpack://wai/./src/components/common/ChatExtra.tsx","webpack://wai/./src/components/common/ChatOrUserPicker.tsx","webpack://wai/./src/components/common/DeleteChatModal.tsx","webpack://wai/./src/components/common/DotAnimation.tsx","webpack://wai/./src/components/common/FakeIcon.tsx","webpack://wai/./src/components/common/File.tsx","webpack://wai/./src/components/common/VerifiedIcon.tsx","webpack://wai/./src/components/common/FullNameTitle.module.scss?6448","webpack://wai/./src/components/common/FullNameTitle.tsx","webpack://wai/./src/components/common/GroupChatInfo.tsx","webpack://wai/./src/components/common/LastMessageMeta.tsx","webpack://wai/./src/components/common/MediaSpoiler.module.scss?4929","webpack://wai/./src/components/common/MediaSpoiler.tsx","webpack://wai/./src/components/common/MessageOutgoingStatus.tsx","webpack://wai/./src/components/common/NothingFound.tsx","webpack://wai/./src/components/common/PasswordForm.tsx","webpack://wai/./src/components/common/PasswordMonkey.tsx","webpack://wai/./src/components/common/Picker.tsx","webpack://wai/./src/components/common/PickerSelectedItem.tsx","webpack://wai/./src/components/common/PremiumIcon.tsx","webpack://wai/./src/components/common/PrivateChatInfo.tsx","webpack://wai/./src/components/common/ProfilePhoto.tsx","webpack://wai/./src/components/common/ProfileInfo.module.scss?701a","webpack://wai/./src/components/common/ProfileInfo.tsx","webpack://wai/./src/components/common/hooks/usePhotosPreload.ts","webpack://wai/./src/components/common/ReactionStaticEmoji.tsx","webpack://wai/./src/components/common/ReportModal.tsx","webpack://wai/./src/components/common/StickerButton.tsx","webpack://wai/./src/components/common/TopicIcon.tsx","webpack://wai/./src/components/common/TypingStatus.tsx","webpack://wai/./src/components/common/helpers/renderMessageText.ts","webpack://wai/./src/components/left/ChatFolderModal.async.tsx","webpack://wai/./src/components/left/main/Badge.tsx","webpack://wai/./src/components/left/main/ChatCallStatus.tsx","webpack://wai/./src/components/left/main/AvatarBadge.tsx","webpack://wai/./src/components/left/main/Chat.tsx","webpack://wai/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://wai/./src/components/left/main/EmptyFolder.tsx","webpack://wai/./src/components/left/main/Archive.module.scss?6d2a","webpack://wai/./src/components/left/main/Archive.tsx","webpack://wai/./src/components/left/main/ChatList.tsx","webpack://wai/./src/components/left/main/Topic.module.scss?d97e","webpack://wai/./src/components/left/main/Topic.tsx","webpack://wai/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://wai/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://wai/./src/components/left/main/EmptyForum.tsx","webpack://wai/./src/components/left/main/ForumPanel.tsx","webpack://wai/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://wai/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://wai/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://wai/./src/components/common/ChatForumLastMessage.tsx","webpack://wai/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://wai/./src/components/left/main/hooks/useChatOrderDiff.ts","webpack://wai/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://wai/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://wai/./src/components/middle/HeaderActions.tsx","webpack://wai/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://wai/./src/components/middle/composer/DropTarget.tsx","webpack://wai/./src/components/middle/composer/DropArea.tsx","webpack://wai/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://wai/./src/util/AbsoluteVideo.ts","webpack://wai/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://wai/./src/components/middle/composer/MessageInput.tsx","webpack://wai/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://wai/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://wai/./src/components/middle/composer/TextFormatter.tsx","webpack://wai/./src/util/getKeyFromEvent.ts","webpack://wai/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://wai/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://wai/./src/components/middle/composer/helpers/selection.ts","webpack://wai/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://wai/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://wai/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://wai/./src/components/middle/message/Photo.tsx","webpack://wai/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://wai/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://wai/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://wai/./src/components/right/hooks/useAsyncRendering.ts","webpack://wai/./src/components/ui/CheckboxGroup.tsx","webpack://wai/./src/components/ui/CropModal.tsx","webpack://wai/./src/components/ui/FloatingActionButton.tsx","webpack://wai/./src/components/ui/ListItem.tsx","webpack://wai/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://wai/./src/components/ui/MenuSeparator.tsx","webpack://wai/./src/components/ui/Notification.tsx","webpack://wai/./src/components/ui/ProgressSpinner.tsx","webpack://wai/./src/components/ui/Radio.tsx","webpack://wai/./src/components/ui/RadioGroup.tsx","webpack://wai/./src/components/ui/RangeSlider.tsx","webpack://wai/./src/components/ui/ResponsiveHoverButton.tsx","webpack://wai/./src/components/ui/SearchInput.tsx","webpack://wai/./src/components/ui/ShowTransition.tsx","webpack://wai/./src/components/ui/Skeleton.tsx","webpack://wai/./src/components/ui/Switcher.tsx","webpack://wai/./src/components/ui/Tab.tsx","webpack://wai/./src/components/ui/TabList.tsx","webpack://wai/./src/components/ui/TextArea.tsx","webpack://wai/./src/hooks/reducers/useFoldersReducer.ts","webpack://wai/./src/hooks/useAsyncResolvers.ts","webpack://wai/./src/hooks/useCanvasBlur.ts","webpack://wai/./src/hooks/useChatContextActions.ts","webpack://wai/./src/hooks/useContextMenuHandlers.ts","webpack://wai/./src/hooks/useContextMenuPosition.ts","webpack://wai/./src/hooks/useDerivedSignal.ts","webpack://wai/./src/hooks/useDerivedState.ts","webpack://wai/./src/hooks/useEnsureMessage.ts","webpack://wai/./src/hooks/useFolderManager.ts","webpack://wai/./src/hooks/useForumPanelRender.ts","webpack://wai/./src/hooks/useGetSelectionRange.ts","webpack://wai/./src/hooks/useHorizontalScroll.ts","webpack://wai/./src/hooks/useHotkeys.ts","webpack://wai/./src/util/parseHotkey.ts","webpack://wai/./src/hooks/useInputFocusOnOpen.ts","webpack://wai/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://wai/./src/hooks/useUniqueId.ts","webpack://wai/./src/hooks/useMediaWithLoadProgress.ts","webpack://wai/./src/hooks/useMouseInside.ts","webpack://wai/./src/hooks/usePrevDuringAnimation.ts","webpack://wai/./src/hooks/useReducer.ts","webpack://wai/./src/hooks/useRunDebounced.ts","webpack://wai/./src/components/common/CalendarModal.async.tsx","webpack://wai/./src/hooks/useSchedule.tsx","webpack://wai/./src/hooks/useSendMessageAction.ts","webpack://wai/./src/hooks/useSignal.ts","webpack://wai/./src/hooks/useSignalEffect.ts","webpack://wai/./src/hooks/useStateRef.ts","webpack://wai/./src/hooks/useTimeout.ts","webpack://wai/./src/lib/fastBlur.js","webpack://wai/./src/lib/rlottie/RLottie.ts","webpack://wai/./src/util/PostMessageConnector.ts","webpack://wai/./src/util/audioPlayer.ts","webpack://wai/./src/util/captureEvents.ts","webpack://wai/./src/util/lethargy.ts","webpack://wai/./src/util/cycleRestrict.ts","webpack://wai/./src/util/fastSmoothScroll.ts","webpack://wai/./src/util/fastSmoothScrollHorizontal.ts","webpack://wai/./src/util/focusEditableElement.ts","webpack://wai/./src/util/getMessageIdsForSelectedText.ts","webpack://wai/./src/util/isElementInViewport.ts","webpack://wai/./src/util/memoized.ts","webpack://wai/./src/util/parseEmojiOnlyString.ts","webpack://wai/./src/util/parseMessageInput.ts","webpack://wai/./src/util/selection.ts","webpack://wai/./src/util/stopEvent.ts","webpack://wai/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiGroupCall, ApiUser } from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  animationLevel: AnimationLevel;\n};\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n  usersById,\n  chatsById,\n  animationLevel,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (participants) {\n      return Object.values(participants).filter((_, i) => i < 3).map(({ id, isUser }) => {\n        if (isUser) {\n          if (!usersById[id]) {\n            return undefined;\n          }\n          return { user: usersById[id] };\n        } else {\n          if (!chatsById[id]) {\n            return undefined;\n          }\n          return { chat: chatsById[id] };\n        }\n      }).filter(Boolean);\n    } else return [];\n  }, [chatsById, participants, usersById]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  if (!groupCall) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        !isActive && 'is-hidden',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', groupCall.participantsCount || 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {fetchedParticipants.map((p) => {\n          if (!p) return undefined;\n          if (p.user) {\n            return <Avatar key={p.user.id} user={p.user} animationLevel={animationLevel} />;\n          } else {\n            return <Avatar key={p.chat.id} chat={p.chat} animationLevel={animationLevel} />;\n          }\n        })}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }) => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n    return {\n      groupCall,\n      usersById: global.users.byId,\n      chatsById: global.chats.byId,\n      activeGroupCallId: global.groupCalls.activeGroupCallId,\n      isActive: ((!groupCall ? (chat && chat.isCallNotEmpty && chat.isCallActive)\n        : (groupCall.participantsCount > 0 && groupCall.isLoaded)))\n        && (activeGroupCallId !== groupCall?.id),\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { ANIMATION_LEVEL_MAX } from '../../config';\nimport usePrevious from '../../hooks/usePrevious';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useTimeout from '../../hooks/useTimeout';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n};\n\nconst ANIMATION_TIME = 200;\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n}) => {\n  const lang = useLang();\n\n  const prevText = usePrevious(text);\n  const forceUpdate = useForceUpdate();\n\n  const isAnimatingRef = useRef(false);\n\n  const shouldAnimate = getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MAX;\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) return text;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld}>{prevText[i]}</div>\n            <div className={styles.characterNew}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    isAnimatingRef.current = true;\n\n    return elements;\n  }, [prevText, shouldAnimate, text]);\n\n  useTimeout(() => {\n    isAnimatingRef.current = false;\n    forceUpdate();\n  }, isAnimatingRef.current ? ANIMATION_TIME : undefined);\n\n  return (\n    <span className={styles.root} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  }, [markPreviewLoaded, previewUrl]);\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat, selectCurrentMessageList, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../global/selectors';\nimport {\n  getChatDescription,\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    fullInfo,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat);\n  }, [chat, isTopicInfo, activeChatUsernames, topicId]);\n\n  const handleNotificationChange = useCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  }, [chatId, isTopicInfo, topicId, updateChatMutedState, updateTopicMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {/* {activeUsernames && renderUsernames(activeUsernames)} */}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">简介</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {/* {!forceShowSelf && ( */}\n      {/*   <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}> */}\n      {/*     <span>{lang('Notifications')}</span> */}\n      {/*     <Switcher */}\n      {/*       id=\"group-notifications\" */}\n      {/*       label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'} */}\n      {/*       checked={areNotificationsEnabled} */}\n      {/*       inactive */}\n      {/*     /> */}\n      {/*   </ListItem> */}\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime,\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useRef, useCallback, useState, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport InputText from '../ui/InputText';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  chatsById?: Record<string, ApiChat>;\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  chatsById,\n  search,\n  searchPlaceholder,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useCallback(() => {\n    onSearchChange('');\n  }, [onSearchChange]);\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const topicsResult = forumId ? chatsById?.[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById![forumId!], topic.id)\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [chatsById, forumId, topicSearch]);\n\n  const handleHeaderBackClick = useCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  }, []);\n\n  const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  }, [onSearchChange]);\n\n  const handleTopicSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  }, []);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById?.[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useCallback((e: React.MouseEvent, chatId: string) => {\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  }, [chatsById, loadTopics, onSelectChatOrUser, resetSearch]);\n\n  const handleTopicClick = useCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  }, [forumId, onSelectChatOrUser]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"ChatOrUserPicker\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slide-fade\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { AnimationLevel } from '../../types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  animationLevel: AnimationLevel;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  animationLevel,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n          animationLevel={animationLevel}\n          withVideo\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    return \"确定要删除？\"\n    // if (isChannel && chat.isCreator) {\n    //   return (\n    //     <p>\n    //       {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n    //     </p>\n    //   );\n    // }\n    //\n    // if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n    //   return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    // }\n    //\n    // return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {/*{isBot && (*/}\n        {/*  <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>*/}\n        {/*    {lang('DeleteAndStop')}*/}\n        {/*  </Button>*/}\n        {/*)}*/}\n        {/*{canDeleteForAll && (*/}\n        {/*  <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>*/}\n        {/*    {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}*/}\n        {/*  </Button>*/}\n        {/*)}*/}\n        {/*{!isPrivateChat && chat.isCreator && (*/}\n        {/*  <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>*/}\n        {/*    {lang('DeleteForAll')}*/}\n        {/*  </Button>*/}\n        {/*)}*/}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(DeleteChatModal));\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return (\n    <span className=\"FakeIcon\">\n      {lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}\n    </span>\n  );\n};\n\nexport default memo(FakeIcon);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ysHMmXALnn0fgFRc7Bn7\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_STATUS_LOOP_LIMIT } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getChatTitle, getUserFullName, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport FakeIcon from './FakeIcon';\nimport CustomEmoji from './CustomEmoji';\nimport PremiumIcon from './PremiumIcon';\n\nimport styles from './FullNameTitle.module.scss';\n\ntype OwnProps = {\n  peer: ApiChat | ApiUser;\n  className?: string;\n  noVerified?: boolean;\n  noFake?: boolean;\n  withEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  isSavedMessages?: boolean;\n  noLoopLimit?: boolean;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  observeIntersection?: ObserveFn;\n};\n\nconst FullNameTitle: FC<OwnProps> = ({\n  className,\n  peer,\n  noVerified,\n  noFake,\n  withEmojiStatus,\n  emojiStatusSize,\n  isSavedMessages,\n  noLoopLimit,\n  onEmojiStatusClick,\n  observeIntersection,\n}) => {\n  const lang = useLang();\n  const isUser = isUserId(peer.id);\n  const title = isUser ? getUserFullName(peer as ApiUser) : getChatTitle(lang, peer as ApiChat);\n  const emojiStatus = isUser && (peer as ApiUser).emojiStatus;\n  const isPremium = isUser && (peer as ApiUser).isPremium;\n\n  if (isSavedMessages) {\n    return (\n      <div className={buildClassName('title', styles.root, className)}>\n        <h3>{lang('SavedMessages')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className={buildClassName('title', styles.root, className)}>\n      <h3 dir=\"auto\" className=\"fullName\">{renderText(title || '')}</h3>\n      {!noVerified && peer.isVerified && <VerifiedIcon />}\n      {!noFake && peer.fakeType && <FakeIcon fakeType={peer.fakeType} />}\n      {withEmojiStatus && emojiStatus && (\n        <CustomEmoji\n          documentId={emojiStatus.documentId}\n          size={emojiStatusSize}\n          loopLimit={!noLoopLimit ? EMOJI_STATUS_LOOP_LIMIT : undefined}\n          observeIntersectionForLoading={observeIntersection}\n          onClick={onEmojiStatusClick}\n        />\n      )}\n      {withEmojiStatus && !emojiStatus && isPremium && <PremiumIcon />}\n    </div>\n  );\n};\n\nexport default memo(FullNameTitle);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat, selectChatMessages, selectChatOnlineCount, selectThreadInfo, selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  withVideoAvatar?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    animationLevel: AnimationLevel;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  withVideoAvatar,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  topic,\n  messagesCount,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && lastSyncTime) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (chat && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          chat={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          withVideo={withVideoAvatar}\n          animationLevel={animationLevel}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon topic={topic!} className=\"topic-header-icon\" size={TOPIC_ICON_SIZE} />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      lastSyncTime,\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  }, []);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon-message-failed\" />\n          </div>\n        ) : <i className={`icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport {MIN_PASSWORD_LENGTH, TEST_PWD} from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState(TEST_PWD);\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue && !TEST_PWD) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n    if(inputRef && inputRef.current.value){\n      setCanSubmit(true);\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          onKeyDown={(e)=>{\n            if(e.code == \"Enter\" && !onSubmit){\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n          }}\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          multiple={true}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={isPasswordVisible ? 'icon-eye' : 'icon-eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport useTimeout from '../../hooks/useTimeout';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport generateIdFor from '../../util/generateIdFor';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './PremiumIcon.scss';\n\n// eslint-disable-next-line max-len\nconst PREMIUM_ICON = { __html: '<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"var(--color-fill)\"/></svg>' };\nconst store: Record<string, boolean> = {};\n\ntype OwnProps = {\n  withGradient?: boolean;\n  big?: boolean;\n  className?: string;\n  onClick?: VoidFunction;\n};\n\nconst PremiumIcon: FC<OwnProps> = ({\n  withGradient,\n  big,\n  className,\n  onClick,\n}) => {\n  const html = useMemo(() => {\n    return withGradient ? getPremiumIconGradient() : PREMIUM_ICON;\n  }, [withGradient]);\n\n  return (\n    <i\n      onClick={onClick}\n      className={buildClassName(\n        'PremiumIcon', className, withGradient && 'gradient', onClick && 'clickable', big && 'big',\n      )}\n      dangerouslySetInnerHTML={html}\n      title=\"Premium\"\n    />\n  );\n};\n\nfunction getPremiumIconGradient() {\n  const id = generateIdFor(store);\n  return {\n    // eslint-disable-next-line max-len\n    __html: `<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient id=\"${id}\" x1=\"3\" y1=\"63.5001\" x2=\"84.1475\" y2=\"-1.32262\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#6B93FF\"/><stop offset=\"0.439058\" stop-color=\"#976FFF\"/><stop offset=\"1\" stop-color=\"#E46ACE\"/></linearGradient></defs><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"url(#${id})\"/></svg>`,\n  };\n}\n\nexport default memo(PremiumIcon);\n","import React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport {getMainUsername, getUserDesc, getUserStatus, isUserOnline} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  hideName?:boolean;\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withVideoAvatar?: boolean;\n  withDesc?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  hideName,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withVideoAvatar,\n  withDesc,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId && lastSyncTime) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, loadFullUser, loadProfilePhotos, lastSyncTime, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (user && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{renderText(status)}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        {\n          withDesc ?\n            <span className=\"user-status\" dir=\"auto\">{getUserDesc(user)}</span>:\n            <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        }\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        withVideo={withVideoAvatar}\n        animationLevel={animationLevel}\n      />\n      {\n        !hideName &&\n        <div className=\"info\">\n          { renderNameTitle()}\n          {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime,\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/environment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  lastSyncTime,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const currentPhoto = photo\n    || user?.fullInfo?.personalPhoto\n    || userOrChat?.fullInfo?.profilePhoto\n    || user?.fullInfo?.fallbackPhoto;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = currentPhoto || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal', 'photo');\n  const avatarBlobUrl = useMedia(avatarHash, undefined, undefined, lastSyncTime);\n\n  const photoHash = canHaveMedia && currentPhoto && !isVideo && `photo${currentPhoto.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash, undefined, undefined, lastSyncTime);\n\n  const videoHash = canHaveMedia && currentPhoto && isVideo && getVideoAvatarMediaHash(currentPhoto);\n  const videoBlobUrl = useMedia(videoHash, undefined, undefined, lastSyncTime);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && currentPhoto?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    currentPhoto?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = currentPhoto || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {currentPhoto && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  if(!content){\n    content = (\n      <div className=\"spinner-wrapper\">\n        <label style={'display:inline-flex'}role=\"button\" title=\"Edit your profile photo\">\n          <i className=\"icon-camera-add\" style={'font-size:48px'}></i>\n        </label>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectTabState,\n  selectChat, selectCurrentMessageList, selectThreadMessagesCount, selectUser, selectUserStatus,\n} from '../../global/selectors';\nimport { getUserStatus, isChatChannel, isUserOnline } from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? animationLevel >= 1 ? (lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized') : 'none'\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const handleClickPremium = useCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  }, [openPremiumModal, user]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && user?.fullInfo?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(user.fullInfo.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && user?.fullInfo?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={user.fullInfo.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(user.fullInfo.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n  if(!mediaData){\n    return <i className={buildClassName('ReactionStaticEmoji',\"shown\",\"open\")}>{reaction.emoticon}</i>\n  }\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  }, [\n    description,\n    exitMessageSelectMode,\n    messageIds,\n    photo,\n    onClose,\n    reportMessages,\n    selectedReason,\n    chatId,\n    reportProfilePhoto,\n    reportPeer,\n    subject,\n  ]);\n\n  const handleSelectReason = useCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useDynamicColorListener from '../../hooks/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  observeIntersection: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noAnimate,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const { rgbColor: customColor } = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noAnimate;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => {\n      return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n    },\n    [isStatusPicker],\n  );\n\n  const getLayout = () => ({ withPortal: isStatusPicker });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextRemoveRecent = useCallback(() => {\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextUnfave = useCallback(() => {\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextFave = useCallback(() => {\n    onFaveClick!(sticker);\n  }, [onFaveClick, sticker]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick?.(clickArg, true);\n  }, [clickArg, onClick]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  }, [clickArg, onClick]);\n\n  const handleOpenSet = useCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  }, [openStickerSet, stickerSetInfo]);\n\n  const handleEmojiStatusExpiresClick = useCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  }, [setEmojiStatus, sticker, handleContextMenuClose, onContextMenuClick]);\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isCustomEmoji && 'custom-emoji',\n    `sticker-button-${id}`,\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        isSmall\n        size={size}\n        shouldLoop\n        shouldPreloadPreview\n        noLoad={!shouldLoad}\n        noPlay={!shouldPlay}\n        withSharedAnimation\n        sharedCanvasRef={sharedCanvasRef}\n        customColor={customColor}\n      />\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities(\n    trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    message.id,\n    isSimple,\n    isProtected,\n  );\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some && entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some && entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const isShown = !forceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'Badge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('Badge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"Badge mention\">\n        <i className=\"icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('Badge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"Badge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './ChatCallStatus.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      'ChatCallStatus',\n      isActive && 'active',\n      isSelected && !isMobile && 'selected',\n    )}\n    >\n      <div className=\"indicator\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectIsForumPanelOpen,\n} from '../../../global/selectors';\n\nimport Badge from './Badge';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  isForumPanelActive?: boolean;\n};\n\nconst AvatarBadge: FC<OwnProps & StateProps> = ({\n  chat,\n  isMuted,\n  isForumPanelActive,\n}) => {\n  return chat && (\n    <div className=\"avatar-badge-wrapper\">\n      <Badge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={!isForumPanelActive} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isForumPanelActive: selectIsForumPanelOpen(global),\n    };\n  },\n)(AvatarBadge));\n","import React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiUser,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiFormattedText,\n  ApiUserStatus,\n  ApiTopic,\n  ApiTypingStatus,\n} from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_MULTITAB_SUPPORTED } from '../../../util/environment';\nimport {\n  isUserId,\n  getPrivateChatUserId,\n  getMessageAction,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectUser,\n  selectChatMessage,\n  selectOutgoingStatus,\n  selectDraft,\n  selectCurrentMessageList,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectUserStatus,\n  selectTopicFromMessage,\n  selectThreadParam, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport Badge from './Badge';\nimport AvatarBadge from './AvatarBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: AnimationLevel;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  animationLevel,\n  isSelected,\n  isSelectedForum,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleClick = useCallback(() => {\n    if (isForum) {\n      openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [isForum, openChat, chatId, isSelected, canScrollDown, openForumPanel, focusLastMessage]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  }, [chatId, onDragEnter]);\n\n  const handleDelete = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleReport = useCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  }, [markRenderReportModal, openReportModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && lastSyncTime && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting, lastSyncTime, loadTopics]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_MULTITAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n          animationLevel={animationLevel}\n          withVideo\n          observeIntersection={observeIntersection}\n        />\n        <AvatarBadge chatId={chatId} />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={animationLevel !== 0} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={user || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      isSelectedForum,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(chat.title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    };\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          {Boolean(archiveUnreadCount) && (\n            <div className={styles.unreadCount}>\n              <AnimatedCounter text={formatIntegerCompact(archiveUnreadCount)} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            {Boolean(archiveUnreadCount) && (\n              <div className=\"Badge\">\n                <AnimatedCounter text={formatIntegerCompact(archiveUnreadCount)} />\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  lastSyncTime?: number;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const { openChat, openNextChat, closeForumPanel } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n\n    if (!isActive || !orderedIds || !IS_PWA) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  }, [closeForumPanel, onLeftColumnContentChange]);\n\n  const handleArchivedDragEnter = useCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  }, [handleArchivedClick]);\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  }, []);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : (!viewportIds || viewportIds!.length === 0) ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport type { AnimationLevel } from '../../../types';\n\nimport { IS_MULTITAB_SUPPORTED } from '../../../util/environment';\nimport {\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage, selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus, selectThreadInfo, selectThreadParam, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport Badge from './Badge';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  animationLevel?: AnimationLevel;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  animationLevel,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleDelete = useCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  }, [chat.id, deleteTopic, topic.id]);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  }, [openChat, chatId, topic.id, canScrollDown, focusLastMessage]);\n\n  const contextActions = useTopicContextActions(topic, chat, wasTopicOpened, canDelete, handleOpenDeleteModal);\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_MULTITAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      animationLevel: global.settings.byKey.animationLevel,\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_MULTITAB_SUPPORTED } from '../../../../util/environment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions(\n  topic: ApiTopic,\n  chat: ApiChat,\n  wasOpened?: boolean,\n  canDelete?: boolean,\n  handleDelete?: NoneToVoidFunction,\n) {\n  const lang = useLang();\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_MULTITAB_SUPPORTED && {\n      title: '1Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const newTabActionSeparator = actionOpenInNewTab && { isSeparator: true, key: 'newTabSeparator' };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: true }),\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      newTabActionSeparator,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID,\n  TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport {\n  selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  lastSyncTime?: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  lastSyncTime,\n  onTopicSearch,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (lastSyncTime && chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, lastSyncTime, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useCallback(() => {\n    closeForumPanel();\n  }, [closeForumPanel]);\n\n  const handleToggleChatInfo = useCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  }, [chat, openChatWithInfo]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat || !lastSyncTime) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n      waitForTransitionEnd(ref.current!, () => {\n        dispatchHeavyAnimationStop();\n      });\n\n      if (isVisible) {\n        shouldRenderRef.current = true;\n        ref.current!.style.transform = 'none';\n      } else {\n        shouldRenderRef.current = false;\n        ref.current!.style.transform = '';\n      }\n    }\n  }, [isVisible, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as T[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const lastMessage = renderLastMessage();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  function handleOpenTopic(e: React.MouseEvent<HTMLDivElement>) {\n    if (lastActiveTopic.unreadCount === 0) return;\n    e.stopPropagation();\n    e.preventDefault();\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  }\n\n  useLayoutEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, lastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onMouseDown={IS_TOUCH_ENV ? undefined : handleOpenTopic}\n            onClick={IS_TOUCH_ENV ? handleOpenTopic : undefined}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onMouseDown={IS_TOUCH_ENV ? undefined : handleOpenTopic}\n        onClick={IS_TOUCH_ENV ? handleOpenTopic : undefined}\n      >\n        {lastMessage}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, { useLayoutEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { AnimationLevel } from '../../../../types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiTopic, ApiMessage, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri, getMessageRoundVideo,\n  getMessageSenderName, getMessageSticker, getMessageVideo, isActionMessage, isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\nimport { fastRaf } from '../../../../util/schedulers';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\nimport {UserIdFirstBot} from \"../../../../worker/setting\";\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  animationLevel,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  animationLevel?: AnimationLevel;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities(draft.text, draft.entities, undefined, undefined, undefined, undefined, true)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n  if(isSpoiler){\n    return messageSummary\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useChatOrderDiff(orderedIds: (string | number)[] | undefined) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [orderById, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default memo(HeaderMenuContainerAsync);\n","import type {FC} from '../../lib/teact/teact';\nimport React, {memo, useCallback, useRef, useState,} from '../../lib/teact/teact';\nimport {getActions, withGlobal} from '../../global';\n\nimport type {MessageListType} from '../../global/types';\nimport {MAIN_THREAD_ID} from '../../api/types';\nimport type {IAnchorPosition} from '../../types';\nimport {ManagementScreens} from '../../types';\n\nimport {ANIMATION_LEVEL_MIN} from '../../config';\nimport {ARE_CALLS_SUPPORTED, IS_PWA} from '../../util/environment';\nimport {isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatBot,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n} from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport {useHotkeys} from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  }, []);\n\n  const handleHeaderMenuClose = useCallback(() => {\n    setIsMenuOpen(false);\n  }, []);\n\n  const handleHeaderMenuHide = useCallback(() => {\n    setMenuPosition(undefined);\n  }, []);\n\n  const handleSubscribeClick = useCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  }, [joinChannel, chatId, shouldSendJoinRequest, showNotification, isChannel, lang]);\n\n  const handleStartBot = useCallback(() => {\n    sendBotCommand({ command: '/start' });\n  }, [sendBotCommand]);\n\n  const handleRestartBot = useCallback(() => {\n    restartBot({ chatId });\n  }, [chatId, restartBot]);\n\n  const handleJoinRequestsClick = useCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  }, [requestNextManagementScreen]);\n\n  const handleSearchClick = useCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because teact must update the state and render the async component\n      requestAnimationFrame(() => {\n        requestAnimationFrame(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  }, [isMobile, noAnimation, onTopicSearch, openLocalTextSearch, withForumActions]);\n\n  const handleAsMessagesClick = useCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  }, [chatId, openChat]);\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_PWA || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  }, [canSearch, handleSearchClick]);\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {/* {canSearch && ( */}\n          {/*   <Button */}\n          {/*     round */}\n          {/*     ripple={isRightColumnShown} */}\n          {/*     color=\"translucent\" */}\n          {/*     size=\"smaller\" */}\n          {/*     onClick={handleSearchClick} */}\n          {/*     ariaLabel=\"Search in this chat\" */}\n          {/*   > */}\n          {/*     <i className=\"icon-search\" /> */}\n          {/*   </Button> */}\n          {/* )} */}\n          {/*{canCall && (*/}\n          {/*  <Button*/}\n          {/*    round*/}\n          {/*    color=\"translucent\"*/}\n          {/*    size=\"smaller\"*/}\n          {/*    // eslint-disable-next-line react/jsx-no-bind*/}\n          {/*    onClick={handleRequestCall}*/}\n          {/*    ariaLabel=\"Call\"*/}\n          {/*  >*/}\n          {/*    <i className=\"icon-phone\" />*/}\n          {/*  </Button>*/}\n          {/*)}*/}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon-user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      {/* <Button */}\n      {/*   ref={menuButtonRef} */}\n      {/*   className={isMenuOpen ? 'active' : ''} */}\n      {/*   round */}\n      {/*   ripple={!isMobile} */}\n      {/*   size=\"smaller\" */}\n      {/*   color=\"translucent\" */}\n      {/*   disabled={noMenu} */}\n      {/*   ariaLabel=\"More actions\" */}\n      {/*   onClick={handleHeaderMenuOpen} */}\n      {/* > */}\n      {/*   <i className=\"icon-more\" /> */}\n      {/* </Button> */}\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n      };\n    }\n\n    const bot = selectChatBot(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chat.fullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chat.fullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = global.settings.byKey.animationLevel === ANIMATION_LEVEL_MIN;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(CustomEmojiTooltipAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  }, [onFileSelect, onHide, withQuick]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    this.container.appendChild(this.video);\n    this.recalculatePositionAndSize();\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    if (!this.video) return;\n    const { size, position: { x, y } } = this.options;\n    const { width, height } = this.container.getBoundingClientRect();\n    this.video.style.left = `${Math.round(x * width)}px`;\n    this.video.style.top = `${Math.round(y * height)}px`;\n    this.video.style.width = `${size}px`;\n    this.video.style.height = `${size}px`;\n  }\n}\n","import {\n  useCallback, useEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport RLottie from '../../../../lib/rlottie/RLottie';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n  removeCustomEmojiInputRenderCallback,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { fastRaf } from '../../../../util/schedulers';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId?: string,\n  isActive?: boolean,\n) {\n  const { rgbColor: textColor } = useDynamicColorListener(inputRef);\n  const mapRef = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const removeContainers = useCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = mapRef.current.get(id);\n      if (player) {\n        player.destroy();\n        mapRef.current.delete(id);\n      }\n    });\n  }, []);\n\n  const synchronizeElements = useCallback(() => {\n    if (!inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n    const global = getGlobal();\n    const removedContainers = new Set(mapRef.current.keys());\n    const customEmojies = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojies.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const id = `${prefixId || ''}${element.dataset.uniqueId}${textColor?.join(',') || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      removedContainers.delete(id);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (mapRef.current.has(id)) {\n        const player = mapRef.current.get(id)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n\n      const animation = createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        uniqueId: id,\n        containerId: prefixId || id,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor,\n      });\n      animation.play();\n\n      mapRef.current.set(id, animation);\n    });\n\n    removeContainers(Array.from(removedContainers));\n  }, [absoluteContainerRef, textColor, inputRef, prefixId, removeContainers, sharedCanvasHqRef, sharedCanvasRef]);\n\n  useEffect(() => {\n    addCustomEmojiInputRenderCallback(synchronizeElements);\n\n    return () => {\n      removeCustomEmojiInputRenderCallback(synchronizeElements);\n    };\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive) {\n      removeContainers(Array.from(mapRef.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    fastRaf(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, removeContainers, sharedCanvasRef, isActive]);\n\n  useEffectWithPrevDeps(([prevTextColor]) => {\n    if (textColor !== prevTextColor) {\n      synchronizeElements();\n    }\n  }, [textColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.pause();\n    });\n  }, []);\n\n  const unfreezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.play();\n    });\n  }, []);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nfunction createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  uniqueId,\n  containerId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  uniqueId: string;\n  containerId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: [number, number, number];\n}): CustomEmojiPlayer {\n  if (customEmoji.isLottie) {\n    const lottie = RLottie.init(\n      containerId,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      undefined,\n      uniqueId,\n      mediaUrl,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      customEmoji.shouldUseTextColor ? textColor : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeContainer(uniqueId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(uniqueId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const absoluteVideo = new AbsoluteVideo(mediaUrl, absoluteContainerRef.current!, { size: SIZE, position });\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useCallback, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport { selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\n// @ts-ignore\nlet recognition\nlet recordStartTime = 0\nlet timer = 0;\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    isAttachmentModalInput ? 'attachment' : undefined,\n    isActive,\n  );\n\n  const maxInputHeight = isMobile ? 256 : 416;\n  const updateInputHeight = useCallback((willSend = false) => {\n    const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n    const clone = scrollerCloneRef.current!;\n    const currentHeight = Number(scroller.style.height.replace('px', ''));\n    const maxHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : maxInputHeight;\n    const newHeight = Math.min(clone.scrollHeight, maxHeight);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      scroller.style.height = `${newHeight}px`;\n      scroller.style.transitionDuration = `${transitionDuration}ms`;\n      scroller.classList.toggle('overflown', clone.scrollHeight > maxHeight);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }, [isAttachmentModalInput, maxInputHeight]);\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n\n    if (e.button === 0) {\n      if(!timer){\n        recordStartTime = new Date().getTime();\n        timer = setInterval(()=>{\n          if(recordStartTime > 0){\n            recordStartTime += 80\n            if(recordStartTime > 1000){\n              if(!recognition){\n                // @ts-ignore\n                recognition = new window.webkitSpeechRecognition();\n                recognition.continuous = true;\n                recognition.interimResults = false;\n                recognition.lang = 'zh-CN';\n                recognition.onresult = (event: { results: string | any[]; }) => {\n                  const results = event.results;\n                  let finalTranscript = '';\n                  let interimTranscript = '';\n                  for (let i = event.resultIndex; i < results.length; i += 1) {\n                    const transcript = results[i][0].transcript;\n                    if (results[i].isFinal) {\n                      finalTranscript += transcript\n                    } else {\n                      interimTranscript += transcript;\n                    }\n                  }\n                  document.execCommand('insertText', false, finalTranscript);\n                };\n                recognition.start();\n              }\n\n              const tickVolume = (recordStartTime % 30 ) / 100\n              document.querySelector(\".Composer .mainSendBtn\").style.boxShadow =\n                `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            }\n          }else{\n            clearInterval(timer)\n          }\n        },80)\n      }\n\n    }\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n  function handleMouseUp(e: React.KeyboardEvent<HTMLDivElement>) {\n    const pressTime = new Date().getTime() - recordStartTime;\n    if(timer){\n      if(recognition){\n        recognition.stop();\n      }\n      recognition = null;\n      document.querySelector(\".Composer .mainSendBtn\").style.boxShadow =\n        `0 0 0 0 rgba(0,0,0,.15)`;\n      clearInterval(timer)\n      timer = 0\n    }\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n    const html = getHtml();\n\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n    // let isFirstEditPos = false;\n    // if(window.getSelection()){\n      // const {startOffset,endOffset} = window.getSelection()!.getRangeAt(0);\n      // isFirstEditPos= (startOffset === endOffset) && startOffset === 0;\n    // }\n\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if(e.metaKey){\n\n      }else{\n        if (\n          !(IS_IOS || IS_ANDROID)\n          && (\n            (messageSendKeyCombo === 'enter' && !e.shiftKey)\n            || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n          )\n        ) {\n          e.preventDefault();\n          closeTextFormatter();\n          onSend();\n        }\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && (!html) && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || (IS_TOUCH_ENV && isMobile)\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobile, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText && <i className=\"icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default memo(SymbolMenuAsync);\n","import React, {\n  memo, useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport useFlag from '../../../hooks/useFlag';\nimport useContextMenuPosition from '../../../hooks/useContextMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\nimport { BOTTOM_INPUT_LEFT_MARGIN } from '../../../worker/setting';\nimport {IS_ANDROID, IS_IOS} from \"../../../util/environment\";\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    shouldUpdateStickerSetsOrder?: boolean\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isReady,\n  isSymbolMenuOpen,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isSymbolMenuForced,\n  className,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  }, [closeBotCommandMenu, closeSendAsMenu, openSymbolMenu]);\n\n  const handleSearchOpen = useCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  }, [setStickerSearchQuery, setGifSearchQuery]);\n\n  const handleSymbolMenuOpen = useCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : EDITABLE_INPUT_CSS_SELECTOR,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  }, [isAttachmentModal, isMobile, openSymbolMenu, closeBotCommandMenu]);\n\n  const getTriggerElement = useCallback(() => triggerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => document.querySelector('#portals .SymbolMenu .bubble'),\n    [],\n  );\n\n  const getLayout = useCallback(() => ({\n    withPortal: true,\n  }), []);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon-smile\" />\n          <i className=\"icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }, [selectedRange]);\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.spoiler]);\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  const handleLinkUrlConfirm = useCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, isEditingLink, linkUrl, onClose, restoreSelection]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    openLinkControl, handleBoldText, handleUnderlineText, handleItalicText, handleMonospaceText,\n    handleStrikethroughText, handleSpoilerText,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useCallback, useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/environment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestAnimationFrame(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  }, [getLastEmoji, isEnabled, inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  }, []);\n\n  const insertEmoji = useCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  }, [getHtml, setHtml, inputId, updateFiltered]);\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestAnimationFrame(() => {\n        focusEditableElement(inputEl, forceFocus);\n      });\n    }\n\n    setFilteredUsers(undefined);\n  }, [inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import React, {\n  useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiMessage } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport {\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  getMessageMediaHash,\n  getMediaTransferState,\n  isOwnMessage,\n  getMessageMediaFormat,\n  getMessageMediaThumbDataUri,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport {getPasswordFromEvent} from \"../../../worker/share/utils/password\";\nimport {blobToBuffer, blobToDataUri, fetchBlob} from \"../../../util/files\";\nimport {\n  readBytes,\n  readInt16,\n  wrapByteBuffer,\n} from \"../../../lib/ptp/protobuf/BaseMsg\";\nimport Account from \"../../../worker/share/Account\";\nimport {getGlobal} from \"../../../global\";\nimport {hashSha256} from \"../../../worker/share/utils/helpers\";\nimport {UserIdFirstBot} from \"../../../worker/setting\";\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nexport const photosMap:Record<string, string> = {}\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [decryptUrl,setDecryptUrl] = useState(\"\");\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useCallback(async () => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      const data = await fetchBlob(fullMediaData);\n      const buf = await blobToBuffer(data);\n      const bb = wrapByteBuffer(buf);\n      const encryptTypeLne = readInt16(bb)\n      const encryptType = readBytes(bb,encryptTypeLne)\n      if(encryptType.toString() === \"EN\"){\n        const typeLen = readInt16(bb)\n        const type = readBytes(bb,typeLen);\n        if(type.toString().indexOf(\"image/\") === 0){\n          const hintLen = readInt16(bb)\n          let hint\n          if(hintLen){\n            hint = readBytes(bb,hintLen);\n            hint = hint.toString();\n          }\n          const {password} = await getPasswordFromEvent(hint,true,'messageEncryptPassword');\n          const body = buf.subarray(2 * 3 + encryptTypeLne + typeLen + hintLen)\n          const decryptData = await Account.getCurrentAccount()?.decryptData(body,password);\n          const uri = await blobToDataUri(new Blob([decryptData],{type:\"image/jpeg\"}))\n          setDecryptUrl(uri);\n          photosMap[getMessageMediaHash(message, 'full')!] = uri;\n          photosMap[getMessageMediaHash(message, 'preview')!] = uri;\n        }\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  }, [fullMediaData, hideSpoiler, isSpoilerShown, isUploading, message, onCancelUpload, onClick]);\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isInSelectMode, isSelected, theme).then((appendixBg) => {\n        contentEl.style.setProperty('--appendix-bg', appendixBg);\n        contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      <img\n        src={decryptUrl ? decryptUrl : fullMediaData}\n        className=\"full-media\"\n        alt=\"\"\n        draggable={!isProtected}\n      />\n\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <i className={buildClassName('icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, inSelectMode?: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\nimport { calculateInlineImageDimensions, calculateVideoDimensions } from '../../../common/helpers/mediaDimensions';\nimport {\n  getMessageText,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n  getMessageVideo,\n  getMessageWebPageVideo,\n} from '../../../../global/helpers';\n\nconst MIN_MEDIA_WIDTH = 100;\nconst MIN_MEDIA_WIDTH_WITH_COMMENTS = 238;\nconst MIN_MEDIA_WIDTH_WITH_TEXT = 175;\nconst MIN_MEDIA_WIDTH_WITH_TEXT_AND_COMMENTS = 238;\nconst MIN_MEDIA_HEIGHT = 90;\nconst SMALL_IMAGE_THRESHOLD = 12;\n\nexport function getMinMediaWidth(hasText?: boolean, hasCommentButton?: boolean) {\n  return hasText\n    ? (hasCommentButton ? MIN_MEDIA_WIDTH_WITH_TEXT_AND_COMMENTS : MIN_MEDIA_WIDTH_WITH_TEXT)\n    : (hasCommentButton ? MIN_MEDIA_WIDTH_WITH_COMMENTS : MIN_MEDIA_WIDTH);\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const hasText = Boolean(getMessageText(message));\n  const minMediaWidth = getMinMediaWidth(hasText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/environment';\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useAppLayout from '../../../../hooks/useAppLayout';\n\nexport default function useBlurredMediaThumbRef(message: ApiMessage, isDisabled?: boolean | string) {\n  const { isMobile } = useAppLayout();\n\n  return useCanvasBlur(\n    getMessageMediaThumbDataUri(message),\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction = MenuItemContextActionItem | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble'),\n    [withPortalForMenu],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: withPortalForMenu }),\n    [withPortalForMenu],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [allowDisabledClick, clickArg, disabled, markIsTouched, onClick, ripple, unmarkIsTouched, href]);\n\n  const handleSecondaryIconClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n    e.stopPropagation();\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  };\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={(!inactive && contextActions) ? handleContextMenu : undefined}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n            onMouseDown={!IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n          >\n            <i className={`icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useRef, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, useCallback, memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  }, [onActivate]);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  }, [onActivate]);\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      // onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      // onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default memo(ResponsiveHoverButton);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  children: React.ReactNode;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = forceAspectRatio ? aspectRatio\n    : buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`);\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo, useEffect } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        tabEl.classList.add(classNames.active);\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    prevPlatformEl.classList.remove('animate');\n    platformEl.classList.remove('animate');\n    platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n    forceReflow(platformEl);\n    platformEl.classList.add('animate');\n    platformEl.style.transform = 'none';\n\n    prevTabEl.classList.remove(classNames.active);\n    tabEl.classList.add(classNames.active);\n  }, [isActive, previousActiveTab]);\n\n  return (\n    <div\n      className={buildClassName('Tab', className)}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/environment';\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    fastSmoothScrollHorizontal(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport useLang from '../../hooks/useLang';\nimport buildClassName from '../../util/buildClassName';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport useDebouncedCallback from \"../../hooks/useDebouncedCallback\";\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  }, [value]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = e.currentTarget.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      e.currentTarget.value = e.currentTarget.value.replace(/\\n/g, ' ');\n      e.currentTarget.selectionEnd = previousSelectionEnd;\n    }\n    e.currentTarget.style.height = '0';\n    e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        rows={3}\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\n\nexport function useThrottledResolver<T>(resolver: () => T, deps: any[], ms: number, noFirst = false) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst);\n}\n\nexport function useDebouncedResolver<T>(resolver: () => T, deps: any[], ms: number, noFirst = false, noLast = false) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = preferredWidth || img.width;\n      canvas.height = preferredHeight || img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${radius}px)`;\n      }\n\n      ctx.drawImage(img, -radius * 2, -radius * 2, canvas.width + radius * 4, canvas.height + radius * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, radius, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_MULTITAB_SUPPORTED } from '../util/environment';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  handleReport?: () => void;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_MULTITAB_SUPPORTED && {\n      title: '在新标签页打开',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const newTabActionSeparator = actionOpenInNewTab && { isSeparator: true, key: 'newTabSeparator' };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('添加到文件夹'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      newTabActionSeparator,\n      actionAddToFolder,\n      // actionMaskAsRead,\n      // actionMarkAsUnread,\n      // actionPin,\n      // !isSelf && actionMute,\n      // !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      // actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\nconst IOS_PWA_CONTEXT_MENU_DELAY_MS = 100;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      (e.target as HTMLElement).classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    (e.target as HTMLElement).classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n  }, []);\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', (e) => {\n        // On iOS in PWA mode, the context menu may cause click-through to the element in the menu upon opening\n        if (IS_IOS && IS_PWA) {\n          setTimeout(() => {\n            element.removeEventListener('mousedown', stopEvent, {\n              capture: true,\n            });\n            element.removeEventListener('click', stopEvent, {\n              capture: true,\n            });\n          }, IOS_PWA_CONTEXT_MENU_DELAY_MS);\n        }\n        stopEvent(e);\n      }, {\n        once: true,\n        capture: true,\n      });\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', stopEvent, {\n          once: true,\n          capture: true,\n        });\n        element.addEventListener('click', stopEvent, {\n          once: true,\n          capture: true,\n        });\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport type { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n  withPortal?: boolean;\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useContextMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n      withPortal = false,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const menuRect = menuEl ? {\n      width: menuEl.offsetWidth,\n      height: menuEl.offsetHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width - rootRect.left > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n\n    const addedYForPortalPositioning = (withPortal ? triggerRect.top : 0);\n    const addedXForPortalPositioning = (withPortal ? triggerRect.left : 0);\n\n    const leftWithPossibleNegative = Math.min(\n      x - triggerRect.left,\n      rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX,\n    );\n    const left = (horizontalPosition === 'left'\n      ? (withPortal\n        ? Math.max(MENU_POSITION_VISUAL_COMFORT_SPACE_PX, leftWithPossibleNegative)\n        : leftWithPossibleNegative)\n      : (x - triggerRect.left)) + addedXForPortalPositioning;\n    const top = y - triggerRect.top + addedYForPortalPositioning;\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX + addedXForPortalPositioning - triggerRect.left) - left;\n    const offsetY = (anchorY + addedYForPortalPositioning - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    handleForumPanelAnimationEnd,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n    if(container){\n      container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n    }\n    return () => {\n      if(container){\n        container.removeEventListener('wheel', handleScroll);\n      }\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nconst useLayoutEffectWithPrevDeps = <T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useCallback, useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\nimport { getServerTimeOffset } from '../util/serverTime';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  }, [onScheduled]);\n\n  const handleMessageScheduleUntilOnline = useCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  }, [handleMessageSchedule]);\n\n  const handleCloseCalendar = useCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  }, [onCancel]);\n\n  const requestCalendar = useCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  }, []);\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useSyncEffect from './useSyncEffect';\n\n// Allows to use state value as \"silent\" dependency in hooks (not causing updates).\n// Also useful for state values that update frequently (such as controlled input value).\nexport function useStateRef<T>(value: T) {\n  const ref = useRef<T>(value);\n\n  useSyncEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref;\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import type { RLottieApi } from './rlottie.worker';\n\nimport {\n  DPR, IS_SAFARI, IS_ANDROID, IS_IOS,\n} from '../../util/environment';\nimport { createConnector } from '../../util/PostMessageConnector';\nimport { animate } from '../../util/animation';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { fastRaf } from '../../util/schedulers';\n\ninterface Params {\n  noLoop?: boolean;\n  size?: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  coords?: { x: number; y: number };\n}\n\nconst WAITING = Symbol('WAITING');\ntype Frame =\n  undefined\n  | typeof WAITING\n  | ImageBitmap;\n\nconst MAX_WORKERS = 4;\nconst HIGH_PRIORITY_QUALITY = (IS_ANDROID || IS_IOS) ? 0.75 : 1;\nconst LOW_PRIORITY_QUALITY = IS_ANDROID ? 0.5 : 0.75;\nconst LOW_PRIORITY_QUALITY_SIZE_THRESHOLD = 24;\nconst HIGH_PRIORITY_CACHE_MODULO = IS_SAFARI ? 2 : 4;\nconst LOW_PRIORITY_CACHE_MODULO = 0;\n\nconst instancesById = new Map<string, RLottie>();\n\nconst workers = new Array(MAX_WORKERS).fill(undefined).map(\n  () => createConnector<RLottieApi>(new Worker(new URL('./rlottie.worker.ts', import.meta.url))),\n);\nlet lastWorkerIndex = -1;\n\nclass RLottie {\n  // Config\n\n  private containers = new Map<string, {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    isLoaded?: boolean;\n    isPaused?: boolean;\n    isSharedCanvas?: boolean;\n    coords?: Params['coords'];\n    onLoad?: NoneToVoidFunction;\n  }>();\n\n  private imgSize!: number;\n\n  private imageData!: ImageData;\n\n  private msPerFrame = 1000 / 60;\n\n  private reduceFactor = 1;\n\n  private cacheModulo!: number;\n\n  private workerIndex!: number;\n\n  private frames: Frame[] = [];\n\n  private framesCount?: number;\n\n  // State\n\n  private isAnimating = false;\n\n  private isWaiting = true;\n\n  private isEnded = false;\n\n  private isDestroyed = false;\n\n  private isRendererInited = false;\n\n  private approxFrameIndex = 0;\n\n  private prevFrameIndex = -1;\n\n  private stopFrameIndex? = 0;\n\n  private speed = 1;\n\n  private direction: 1 | -1 = 1;\n\n  private lastRenderAt?: number;\n\n  static init(...args: ConstructorParameters<typeof RLottie>) {\n    const [container, canvas, onLoad, id, , params] = args;\n    let instance = instancesById.get(id);\n\n    if (!instance) {\n      // eslint-disable-next-line prefer-rest-params\n      instance = new RLottie(...args);\n      instancesById.set(id, instance);\n    } else {\n      instance.addContainer(container, canvas, onLoad, params?.coords);\n    }\n\n    return instance;\n  }\n\n  constructor(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad: NoneToVoidFunction | undefined,\n    private id: string,\n    private tgsUrl: string,\n    private params: Params = { },\n    private customColor?: [number, number, number],\n    private onEnded?: (isDestroyed?: boolean) => void,\n    private onLoop?: () => void,\n  ) {\n    this.addContainer(containerId, container, onLoad, params.coords);\n    this.initConfig();\n    this.initRenderer();\n  }\n\n  public removeContainer(containerId: string) {\n    const {\n      canvas, ctx, isSharedCanvas, coords,\n    } = this.containers.get(containerId)!;\n\n    if (isSharedCanvas) {\n      ctx.clearRect(coords!.x, coords!.y, this.imgSize, this.imgSize);\n    } else {\n      canvas.remove();\n    }\n\n    this.containers.delete(containerId);\n\n    if (!this.containers.size) {\n      this.destroy();\n    }\n  }\n\n  isPlaying() {\n    return this.isAnimating || this.isWaiting;\n  }\n\n  play(forceRestart = false, containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = false;\n    }\n\n    if (this.isEnded && forceRestart) {\n      this.approxFrameIndex = Math.floor(0);\n    }\n\n    this.stopFrameIndex = undefined;\n    this.direction = 1;\n    this.doPlay();\n  }\n\n  pause(containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = true;\n\n      const areAllContainersPaused = Array.from(this.containers.values()).every(({ isPaused }) => isPaused);\n      if (!areAllContainersPaused) {\n        return;\n      }\n    }\n\n    if (this.isWaiting) {\n      this.stopFrameIndex = this.approxFrameIndex;\n    } else {\n      this.isAnimating = false;\n    }\n\n    if (!this.params.isLowPriority) {\n      this.frames = this.frames.map((frame, i) => {\n        if (i === this.prevFrameIndex) {\n          return frame;\n        } else {\n          if (frame && frame !== WAITING) {\n            frame.close();\n          }\n\n          return undefined;\n        }\n      });\n    }\n  }\n\n  playSegment([startFrameIndex, stopFrameIndex]: [number, number]) {\n    this.approxFrameIndex = Math.floor(startFrameIndex / this.reduceFactor);\n    this.stopFrameIndex = Math.floor(stopFrameIndex / this.reduceFactor);\n    this.direction = startFrameIndex < stopFrameIndex ? 1 : -1;\n    this.doPlay();\n  }\n\n  setSpeed(speed: number) {\n    this.speed = speed;\n  }\n\n  setNoLoop(noLoop?: boolean) {\n    this.params.noLoop = noLoop;\n  }\n\n  setSharedCanvasCoords(containerId: string, newCoords: Params['coords']) {\n    const containerInfo = this.containers.get(containerId)!;\n    const {\n      canvas, ctx,\n    } = containerInfo;\n\n    if (!canvas.dataset.isJustCleaned || canvas.dataset.isJustCleaned === 'false') {\n      const sizeFactor = this.calcSizeFactor();\n      ensureCanvasSize(canvas, sizeFactor);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.dataset.isJustCleaned = 'true';\n      fastRaf(() => {\n        canvas.dataset.isJustCleaned = 'false';\n      });\n    }\n\n    containerInfo.coords = {\n      x: Math.round((newCoords?.x || 0) * canvas.width),\n      y: Math.round((newCoords?.y || 0) * canvas.height),\n    };\n\n    const frame = this.getFrame(this.prevFrameIndex) || this.getFrame(Math.round(this.approxFrameIndex));\n\n    if (frame && frame !== WAITING) {\n      ctx.drawImage(frame, containerInfo.coords.x, containerInfo.coords.y);\n    }\n  }\n\n  private addContainer(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad?: NoneToVoidFunction,\n    coords?: Params['coords'],\n  ) {\n    const sizeFactor = this.calcSizeFactor();\n\n    let imgSize: number;\n\n    if (container instanceof HTMLDivElement) {\n      if (!(container.parentNode instanceof HTMLElement)) {\n        throw new Error('[RLottie] Container is not mounted');\n      }\n\n      let { size } = this.params;\n\n      if (!size) {\n        size = (\n          container.offsetWidth\n          || parseInt(container.style.width, 10)\n          || container.parentNode.offsetWidth\n        );\n\n        if (!size) {\n          throw new Error('[RLottie] Failed to detect width from container');\n        }\n      }\n\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d')!;\n\n      canvas.style.width = `${size}px`;\n      canvas.style.height = `${size}px`;\n\n      imgSize = Math.round(size * sizeFactor);\n\n      canvas.width = imgSize;\n      canvas.height = imgSize;\n\n      container.appendChild(canvas);\n\n      this.containers.set(containerId, {\n        canvas, ctx, onLoad,\n      });\n    } else {\n      if (!container.isConnected) {\n        throw new Error('[RLottie] Shared canvas is not mounted');\n      }\n\n      const canvas = container;\n      const ctx = canvas.getContext('2d')!;\n\n      ensureCanvasSize(canvas, sizeFactor);\n\n      imgSize = Math.round(this.params.size! * sizeFactor);\n\n      this.containers.set(containerId, {\n        canvas,\n        ctx,\n        isSharedCanvas: true,\n        coords: {\n          x: Math.round((coords?.x || 0) * canvas.width),\n          y: Math.round((coords?.y || 0) * canvas.height),\n        },\n        onLoad,\n      });\n    }\n\n    if (!this.imgSize) {\n      this.imgSize = imgSize;\n      this.imageData = new ImageData(imgSize, imgSize);\n    }\n\n    if (this.isRendererInited) {\n      this.doPlay();\n    }\n  }\n\n  private calcSizeFactor() {\n    const {\n      isLowPriority,\n      size,\n      // Reduced quality only looks acceptable on big enough images\n      quality = isLowPriority && (!size || size > LOW_PRIORITY_QUALITY_SIZE_THRESHOLD)\n        ? LOW_PRIORITY_QUALITY : HIGH_PRIORITY_QUALITY,\n    } = this.params;\n\n    // Reduced quality only looks acceptable on high DPR screens\n    return Math.max(DPR * quality, 1);\n  }\n\n  private destroy() {\n    this.isDestroyed = true;\n    this.pause();\n    this.clearCache();\n    this.destroyRenderer();\n\n    instancesById.delete(this.id);\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      if (frame && frame !== WAITING) {\n        frame.close();\n      }\n    });\n\n    // Help GC\n    this.imageData = undefined as any;\n    this.frames = [];\n  }\n\n  private initConfig() {\n    const { isLowPriority } = this.params;\n\n    this.cacheModulo = isLowPriority ? LOW_PRIORITY_CACHE_MODULO : HIGH_PRIORITY_CACHE_MODULO;\n  }\n\n  setColor(newColor: [number, number, number] | undefined) {\n    this.customColor = newColor;\n  }\n\n  private initRenderer() {\n    this.workerIndex = cycleRestrict(MAX_WORKERS, ++lastWorkerIndex);\n\n    workers[this.workerIndex].request({\n      name: 'init',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.imgSize,\n        this.params.isLowPriority || false,\n        this.customColor,\n        this.onRendererInit.bind(this),\n      ],\n    });\n  }\n\n  private destroyRenderer() {\n    workers[this.workerIndex].request({\n      name: 'destroy',\n      args: [this.id],\n    });\n  }\n\n  private onRendererInit(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.isRendererInited = true;\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n\n  changeData(tgsUrl: string) {\n    this.pause();\n    this.tgsUrl = tgsUrl;\n    this.initConfig();\n\n    workers[this.workerIndex].request({\n      name: 'changeData',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.params.isLowPriority || false,\n        this.onChangeData.bind(this),\n      ],\n    });\n  }\n\n  private onChangeData(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n    this.isWaiting = false;\n    this.isAnimating = false;\n\n    this.doPlay();\n  }\n\n  private doPlay() {\n    if (!this.framesCount) {\n      return;\n    }\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.isAnimating) {\n      return;\n    }\n\n    if (!this.isWaiting) {\n      this.lastRenderAt = undefined;\n    }\n\n    this.isEnded = false;\n    this.isAnimating = true;\n    this.isWaiting = false;\n\n    animate(() => {\n      if (this.isDestroyed) {\n        return false;\n      }\n\n      // Paused from outside\n      if (!this.isAnimating) {\n        const areAllLoaded = Array.from(this.containers.values()).every(({ isLoaded }) => isLoaded);\n        if (areAllLoaded) {\n          return false;\n        }\n      }\n\n      const frameIndex = Math.round(this.approxFrameIndex);\n      const frame = this.getFrame(frameIndex);\n      if (!frame || frame === WAITING) {\n        if (!frame) {\n          this.requestFrame(frameIndex);\n        }\n\n        this.isAnimating = false;\n        this.isWaiting = true;\n        return false;\n      }\n\n      if (this.cacheModulo && frameIndex % this.cacheModulo === 0) {\n        this.cleanupPrevFrame(frameIndex);\n      }\n\n      if (frameIndex !== this.prevFrameIndex) {\n        this.containers.forEach((containerData) => {\n          const {\n            ctx, isLoaded, isPaused, coords: { x, y } = {}, onLoad,\n          } = containerData;\n\n          if (!isLoaded || !isPaused) {\n            ctx.clearRect(x || 0, y || 0, this.imgSize, this.imgSize);\n            ctx.drawImage(frame, x || 0, y || 0);\n          }\n\n          if (!isLoaded) {\n            containerData.isLoaded = true;\n            onLoad?.();\n          }\n        });\n\n        this.prevFrameIndex = frameIndex;\n      }\n\n      const now = Date.now();\n      const currentSpeed = this.lastRenderAt ? this.msPerFrame / (now - this.lastRenderAt) : 1;\n      const delta = Math.min(1, (this.direction * this.speed) / currentSpeed);\n      const expectedNextFrameIndex = Math.round(this.approxFrameIndex + delta);\n\n      this.lastRenderAt = now;\n\n      // Forward animation finished\n      if (delta > 0 && (frameIndex === this.framesCount! - 1 || expectedNextFrameIndex > this.framesCount! - 1)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = 0;\n\n        // Backward animation finished\n      } else if (delta < 0 && (frameIndex === 0 || expectedNextFrameIndex < 0)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = this.framesCount! - 1;\n\n        // Stop frame reached\n      } else if (\n        this.stopFrameIndex !== undefined\n        && (frameIndex === this.stopFrameIndex\n          || (\n            (delta > 0 && expectedNextFrameIndex > this.stopFrameIndex)\n            || (delta < 0 && expectedNextFrameIndex < this.stopFrameIndex)\n          ))\n      ) {\n        this.stopFrameIndex = undefined;\n        this.isAnimating = false;\n        return false;\n\n        // Preparing next frame\n      } else {\n        this.approxFrameIndex += delta;\n      }\n\n      const nextFrameIndex = Math.round(this.approxFrameIndex);\n\n      if (!this.getFrame(nextFrameIndex)) {\n        this.requestFrame(nextFrameIndex);\n        this.isWaiting = true;\n        this.isAnimating = false;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  private getFrame(frameIndex: number) {\n    return this.frames[frameIndex];\n  }\n\n  private requestFrame(frameIndex: number) {\n    this.frames[frameIndex] = WAITING;\n\n    workers[this.workerIndex].request({\n      name: 'renderFrames',\n      args: [this.id, frameIndex, this.onFrameLoad.bind(this)],\n    });\n  }\n\n  private cleanupPrevFrame(frameIndex: number) {\n    if (this.framesCount! < 3) {\n      return;\n    }\n\n    const prevFrameIndex = cycleRestrict(this.framesCount!, frameIndex - 1);\n    this.frames[prevFrameIndex] = undefined;\n  }\n\n  private onFrameLoad(frameIndex: number, imageBitmap: ImageBitmap) {\n    if (this.frames[frameIndex] !== WAITING) {\n      return;\n    }\n\n    this.frames[frameIndex] = imageBitmap;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n}\n\nfunction ensureCanvasSize(canvas: HTMLCanvasElement, sizeFactor: number) {\n  const expectedWidth = Math.round(canvas.offsetWidth * sizeFactor);\n  const expectedHeight = Math.round(canvas.offsetHeight * sizeFactor);\n  if (canvas.width !== expectedWidth || canvas.height !== expectedHeight) {\n    canvas.width = expectedWidth;\n    canvas.height = expectedHeight;\n  }\n}\n\nexport default RLottie;\n","import generateIdFor from './generateIdFor';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateIdFor(requestStates);\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { fastRaf } from './schedulers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  let initialTouchCenter = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    initialTouchCenter = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1) {\n        onWheelDrag(e);\n      } else if (isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './environment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\nimport { fastRaf } from './schedulers';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  fastRaf(() => {\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n\n      container.scrollTop = Math.round(target - currentPath);\n\n      isAnimating = t < 1;\n\n      if (!isAnimating) {\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    });\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  return scrollWithJs(container, left, duration);\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return Promise.resolve();\n  }\n\n  let isStopped = false;\n  const id = Math.random().toString();\n  container.dataset.scrollId = id;\n  stopById.set(id, () => {\n    isStopped = true;\n  });\n\n  container.style.scrollSnapType = 'none';\n\n  let resolve: VoidFunction;\n  const promise = new Promise<void>((r) => {\n    resolve = r;\n  });\n  const startAt = Date.now();\n\n  animate(() => {\n    if (isStopped) return false;\n\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    if (t >= 1) {\n      container.style.scrollSnapType = '';\n      delete container.dataset.scrollId;\n      stopById.delete(id);\n      resolve();\n    }\n    return t < 1;\n  });\n\n  return promise;\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './environment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  if(html.indexOf(\"```html\") !== -1){\n    return {\n      text:html,\n      entities: undefined,\n    };\n  }\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  if(html.indexOf(\"```html\") !== -1){\n    return html\n  }\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<b>$3</b>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<i>$3</i>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<s>$3</s>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    `$1<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$3</span>$5`,\n  );\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","activeGroupCallId","selectTabState","isMasterTab","groupCalls","undefined","usersById","users","byId","chatsById","chats","isActive","participantsCount","isLoaded","isCallNotEmpty","isCallActive","id","animationLevel","settings","byKey","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","Object","values","filter","_","i","map","isUser","user","Boolean","useEffect","subscribed","React","buildClassName","onClick","p","Avatar","key","Button","round","AnimatedCounter","text","prevText","usePrevious","forceUpdate","useForceUpdate","isAnimatingRef","useRef","shouldAnimate","getGlobal","ANIMATION_LEVEL_MAX","textElement","elements","length","push","current","useTimeout","dir","isRtl","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","useFlag","has","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","add","size","styles","style","buildStyle","src","onLoad","AnimatedIcon","noTransition","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","ChatExtra","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","fullInfo","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","useState","isTopicInfo","MAIN_THREAD_ID","activeChatUsernames","result","u","link","getTopicLink","username","getChatLink","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","message","formattedNumber","formatPhoneNumberWithCode","description","bio","getChatDescription","ListItem","icon","multiline","narrow","ripple","isStatic","renderText","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","idx","textToCopy","TME_LINK_PREFIX","href","e","stopEvent","renderUsernames","TOPIC_ICON_SIZE","REM","ChatOrUserPicker","isOpen","currentUserId","chatOrUserIds","search","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","onClose","onCloseAnimationEnd","loadTopics","containerRef","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","activeKey","viewportOffset","indexOf","resetSearch","useInputFocusOnOpen","topicIds","topics","topicsResult","searchTitle","toLowerCase","reduce","acc","topic","getCanPostInChat","title","includes","keys","Number","handleHeaderBackClick","handleSearchChange","currentTarget","value","handleTopicSearchChange","handleKeyDown","useKeyboardListNavigation","index","handleTopicKeyDown","handleClick","handleTopicClick","Modal","Transition","name","color","ariaLabel","InputText","ref","onChange","onKeyDown","placeholder","InfiniteScroll","items","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","clickArg","TopicIcon","letterClassName","Loading","onLoadMore","PrivateChatInfo","status","GroupChatInfo","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","handleDeleteChat","getChatTitle","shouldDeleteForAll","contactId","accessHash","isCreator","handleLeaveChat","header","isSavedMessages","withVideo","isText","DotAnimation","content","FakeIcon","fakeType","File","extension","timestamp","sender","thumbnailDataUri","previewData","smaller","isTransferring","isUploading","isSelectable","isSelected","transferProgress","actionIcon","onDateClick","elementRef","isMobile","useAppLayout","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldRender","shouldSpinnerRender","spinnerClassNames","useShowTransition","getColorFromExtension","sizeString","getFileSizeString","width","height","getDocumentThumbnailDimensions","fullClassName","alt","ProgressSpinner","progress","Math","Link","formatMediaDateTime","formatPastTimeShort","VERIFIED_ICON","__html","VerifiedIcon","dangerouslySetInnerHTML","FullNameTitle","peer","noVerified","noFake","withEmojiStatus","emojiStatusSize","noLoopLimit","onEmojiStatusClick","observeIntersection","getUserFullName","emojiStatus","isPremium","isVerified","CustomEmoji","documentId","loopLimit","EMOJI_STATUS_LOOP_LIMIT","observeIntersectionForLoading","PremiumIcon","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","withDots","withMediaViewer","withUsername","withFullInfo","withUpdatingStatus","withChatType","withVideoAvatar","noRtl","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","stopPropagation","avatarOwnerId","mediaId","origin","MediaViewerOrigin","getMainUsername","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","MessageOutgoingStatus","date","MediaSpoiler","isVisible","withAnimation","canvasRef","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","setAttribute","Keys","NothingFound","PasswordForm","isLoading","isPasswordVisible","error","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","TEST_PWD","canSubmit","setCanSubmit","focusDelayTimeoutMs","IS_TOUCH_ENV","focus","requestAnimationFrame","select","action","event","preventDefault","autoComplete","type","tabIndex","code","multiple","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","PasswordMonkey","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","AnimatedSticker","STICKER_SIZE_TWO_FA","LOCAL_TGS_URLS","playSegment","noLoop","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","onSelectedIdsChange","onFilterChange","shouldMinimize","setTimeout","handleItemClick","newSelectedIds","splice","handleFilterChange","PickerSelectedItem","isMinimized","canClose","Checkbox","label","checked","iconElement","titleText","PREMIUM_ICON","store","withGradient","big","html","generateIdFor","getPremiumIconGradient","userStatus","selectUserStatus","hideName","withDesc","noStatusOrTyping","adminMember","customTitle","isOwner","isUserOnline","getUserDesc","getUserStatus","ProfilePhoto","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","currentPhoto","personalPhoto","profilePhoto","fallbackPhoto","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","mediaViewer","currentTopicId","ProfileInfo","openPremiumModal","photos","MEMO_EMPTY_ARRAY","prevMediaId","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","max","profile","currentIndex","slice","forEach","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","element","document","querySelector","captureEvents","selectorToPreventScroll","onSwipe","direction","SwipeDirection","renderPhotoTabs","renderPhoto","ReactionStaticEmoji","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","mediaData","observeIntersectionForPlaying","blankUrl","emoticon","ReportModal","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","contentForStatusMenuContext","arg","StickerButton","noAnimate","noContextMenu","isStatusPicker","canViewSet","isCurrentUserPremium","noShowPremium","sharedCanvasRef","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","rgbColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","stickerSetInfo","isLocked","isIntersecting","useIsIntersecting","shouldLoad","shouldPlay","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useContextMenuPosition","getLayout","withPortal","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","duration","expires","Date","now","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","item","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","onContextMenu","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noPlay","withSharedAnimation","Menu","autoClose","iconEmojiId","TopicDefaultIcon","iconColor","typingUser","typingUserName","replace","trim","renderMessageText","highlight","emojiSize","isSimple","truncateLength","isProtected","shouldRenderAsHtml","entities","contentNotSupportedText","getMessageText","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","ChatFolderModal","useModuleLoader","Bundles","Badge","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","ChatCallStatus","isForumPanelActive","selectIsForumPanelOpen","AvatarBadge","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","Chat","folderId","orderDiff","animationType","offsetTop","onDragEnter","openChat","focusLastMessage","openForumPanel","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","forceOnHeavyAnimation","shouldReplaceHistory","handleDragEnter","handleDelete","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","IS_MULTITAB_SUPPORTED","createLocationHash","withPortalForMenu","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","buttonClassName","RESERVED_HOTKEYS","ChatList","isForumPanelOpen","canDisplayArchive","onLeftColumnContentChange","openNextChat","closeForumPanel","shouldIgnoreDragRef","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","chatsHeight","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useChatOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_PWA","addEventListener","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","startsWith","digit","match","isArchiveInList","shift","position","LeftColumnContent","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","itemSelector","preloadBackwards","onDragLeave","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","newTabActionSeparator","isSeparator","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","ForumPanel","onTopicSearch","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","captureEscKeyListener","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","withForumActions","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","noForumTopicPanel","getIsMobile","useLayoutEffect","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","opacity","fastRaf","classList","remove","ANIMATION_END_DELAY","orderById","prevOrderById","mapValues","order","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","HeaderMenuContainer","selectIsInSelectMode","noMenu","bot","selectChatBot","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","ANIMATION_LEVEL_MIN","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuClose","right","bottom","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomEmojiTooltip","DropTarget","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","DropArea","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","fromTarget","matches","window","shouldRenderQuick","Portal","containerId","onDragOver","handleDragOver","clearTimeout","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","_defineProperty","this","video","createElement","load","appendChild","recalculatePositionAndSize","play","isPlaying","paused","safePlay","pause","destroy","updatePosition","SIZE","THROTTLE_MS","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","recognition","recordStartTime","timer","messageSendKeyCombo","replyingToId","selectReplyingToId","isSelectModeActive","MessageInput","captionLimit","isAttachmentModalInput","editableInputId","getHtml","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","onScroll","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","prefixId","textColor","mapRef","Map","removeContainers","ids","player","get","delete","synchronizeElements","removedContainers","querySelectorAll","dataset","uniqueId","join","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","customEmojis","isHq","selectIsAlwaysHighPriorityEmoji","animation","isLottie","lottie","RLottie","coords","isLowPriority","removeContainer","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","set","addCustomEmojiInputRenderCallback","removeCustomEmojiInputRenderCallback","useEffectWithPrevDeps","prevTextColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","scroller","clone","currentHeight","newHeight","min","scrollHeight","transitionDuration","log","exec","toggle","htmlRef","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","IS_ANDROID","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","useDerivedState","contentEditable","textContent","IS_EMOJI_SUPPORTED","isComposing","altKey","once","handleCloseContextMenu","e2","button","getTime","setInterval","webkitSpeechRecognition","continuous","interimResults","onresult","results","finalTranscript","interimTranscript","resultIndex","transcript","isFinal","execCommand","start","tickVolume","boxShadow","clearInterval","onMouseUp","stop","onTouchCancel","TextFormatter","anchorPosition","SymbolMenu","SymbolMenuButton","canSendGifs","canSendStickers","isReady","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","isAttachmentModal","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","isSymbolMenuForced","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","query","handleSymbolMenuOpen","messageInput","EDITABLE_INPUT_MODAL_CSS_SELECTOR","EDITABLE_INPUT_CSS_SELECTOR","activeElement","ResponsiveHoverButton","onActivate","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","b","m","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","MAX_NESTING_PARENTS","inputId","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","setHtml","getSelectionRange","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","insertCustomEmoji","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","unique","useEmojiTooltip","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","default","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","atIndex","lastIndexOf","emojiHtml","getElementById","emojiCode","newShouldAutoInsert","endsWith","test","isEmojiTooltipOpen","closeEmojiTooltip","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","insertMention","forceFocus","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","substr","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","photosMap","Photo","noAvatars","canAutoLoad","isInSelectMode","uploadProgress","dimensions","asForwarded","nonInteractive","shouldAffectAppendix","isDownloading","theme","onCancelUpload","decryptUrl","setDecryptUrl","getMessagePhoto","getMessageWebPagePhoto","localBlobUrl","isLoadAllowed","setIsLoadAllowed","loadProgress","useMediaWithLoadProgress","useBlurredMediaThumbRef","isSpoilerShown","hideSpoiler","downloadProgress","getMessageMediaFormat","getMediaTransferState","wasLoadDisabled","shouldRenderSpinner","shouldRenderDownloadButton","downloadButtonClassNames","data","fetchBlob","buf","blobToBuffer","bb","wrapByteBuffer","encryptTypeLne","readInt16","readBytes","typeLen","hintLen","getPasswordFromEvent","body","subarray","decryptData","Account","uri","blobToDataUri","Blob","isAllowed","isOwn","isOwnMessage","useLayoutEffectWithPrevDeps","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","removeAttribute","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","setProperty","calculateMediaDimensions","dimensionsStyle","draggable","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","inSelectMode","img","Image","crossOrigin","onload","canvas","ctx","getContext","drawImage","getImageData","getAppendixColorFromImage","MIN_MEDIA_WIDTH","MIN_MEDIA_WIDTH_WITH_COMMENTS","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH_WITH_TEXT_AND_COMMENTS","MIN_MEDIA_HEIGHT","SMALL_IMAGE_THRESHOLD","getMinMediaWidth","hasText","hasCommentButton","isWebPagePhoto","isWebPageVideo","getMessageWebPageVideo","calculateInlineImageDimensions","calculateVideoDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isDisabled","useAsyncRendering","dependencies","delay","timeoutRef","useSyncEffect","CheckboxGroup","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","cropperResultOptions","quality","format","circle","Croppie","croppiePromise","cropper","CropModal","isCroppieReady","setIsCroppieReady","imgFile","cropContainer","offsetHeight","enableZoom","boundary","viewport","bind","url","err","DEBUG","console","initCropper","ensureCroppie","handleCropClick","croppedImg","blobToFile","hasCloseButton","FloatingActionButton","children","buttonRef","leftElement","secondaryIcon","rightElement","allowDisabledClick","inactive","onSecondaryIconClick","markIsTouched","unmarkIsTouched","handleClickEvent","MouseButton","handleSecondaryIconClick","handleMouseDown","ButtonElementTag","RippleEffect","MenuSeparator","Notification","onDismiss","actionText","actions","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","l","xl","square","transparent","noCross","radius","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","Radio","hidden","loadingOption","RangeSlider","step","renderValue","mainClassName","trackWidth","openTimeout","isFirstTimeActivation","buttonProps","isMouseInside","SearchInput","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","backgroundColor","noCloseTransition","shouldAnimateFirstRender","prevIsOpen","prevChildren","fromChildrenRef","isFirstRender","Skeleton","variant","forceAspectRatio","inline","classNames","Switcher","onCheck","Tab","isBlocked","badgeCount","isBadgeActive","previousActiveTab","tabRef","tabEl","prevTabEl","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","TabList","tabs","areFolders","activeTab","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","fastSmoothScrollHorizontal","tab","_tab$id","TextArea","success","readOnly","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","labelText","textarea","previousSelectionEnd","selectionEnd","rows","htmlFor","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","useFoldersReducer","useReducer","resolver","deps","ms","noFirst","setValue","useDebouncedResolver","noLast","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","isChatArchived","isChatGroup","getCanDeleteChat","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","clearLongPressTimer","startLongPressTimer","originalEvent","touches","capture","emulateContextMenuEvent","passive","MENU_POSITION_VISUAL_COMFORT_SPACE_PX","MENU_POSITION_BOTTOM_MARGIN","EMPTY_RECT","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","marginTop","parseInt","getComputedStyle","menuRect","rootRect","horizontalPosition","verticalPosition","triggerRect","addedYForPortalPositioning","addedXForPortalPositioning","leftWithPossibleNegative","menuMaxHeight","offsetX","offsetY","resolverOrDependency","isAsync","_dependencies","getValue","useSignal","resolverRef","useStateRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","newValue","messageId","replyOriginForId","loadMessage","loadMessageThrottled","throttled","throttle","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","handleForumPanelAnimationEnd","shouldRenderForumPanel","useGetSelectionRange","inputSelector","getRange","setRange","onSelectionChange","range","Element","shouldPreventDefault","handleScroll","deltaX","deltaY","IGNORE_TAGS","handlers","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","documentElement","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","isConnected","debugKey","prevDeps","useUniqueId","idRef","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","useMouseInside","menuCloseTimeout","markMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","useRunDebounced","CalendarModal","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","initial","_signalRef$current","signalRef","createSignal","effect","isFirstRun","dependency","isSignal","subscribe","useEffectOnce","cleanupEffect","callback","savedCallback","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","mul_sum","shg_sum","vmin","vmax","putImageData","WAITING","Symbol","HIGH_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY_SIZE_THRESHOLD","HIGH_PRIORITY_CACHE_MODULO","IS_SAFARI","instancesById","workers","fill","createConnector","Worker","URL","lastWorkerIndex","static","args","params","instance","addContainer","onEnded","onLoop","initConfig","initRenderer","isSharedCanvas","containers","clearRect","imgSize","isAnimating","isWaiting","forceRestart","isPaused","isEnded","approxFrameIndex","floor","stopFrameIndex","doPlay","every","frames","frame","prevFrameIndex","close","startFrameIndex","reduceFactor","setSpeed","speed","setNoLoop","newCoords","containerInfo","isJustCleaned","sizeFactor","calcSizeFactor","ensureCanvasSize","getFrame","HTMLDivElement","ImageData","isRendererInited","DPR","isDestroyed","clearCache","destroyRenderer","cacheModulo","setColor","newColor","workerIndex","cycleRestrict","request","onRendererInit","msPerFrame","framesCount","changeData","onChangeData","lastRenderAt","animate","frameIndex","requestFrame","cleanupPrevFrame","containerData","currentSpeed","delta","expectedNextFrameIndex","nextFrameIndex","onFrameLoad","imageBitmap","expectedWidth","expectedHeight","ConnectorClass","channel","init","postMessage","messageData","requestStates","requestStatesByCallback","requestState","promise","reject","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","update","response","callbackArgs","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","audio","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","time","fastSeek","setVolume","volume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","queue","getTrackQueue","chatAudio","makeTrackId","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","MOVED_THRESHOLD","SWIPE_THRESHOLD","RELEASE_WHEEL_ZOOM_DELAY","RELEASE_WHEEL_DRAG_DELAY","getDistance","a","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","t","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","initialTouchCenter","innerWidth","innerHeight","minZoom","maxZoom","onCapture","excludedClosestSelector","withNativeDrag","onDrag","onMove","onRelease","withCursor","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","fastSmoothScroll","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","elementTop","scrollTop","offset","FocusDirection","calculateScrollFrom","scrollWithJs","isAnimatingScroll","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","currentPath","DEFAULT_DURATION","stopById","containerWidth","scrollId","isStopped","random","scrollSnapType","force","forcePlaceCaretAtEnd","createRange","lastChild","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","windowSize","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","ENTITY_CLASS_BY_NODE_NAME","INS","S","STRIKE","PRE","BLOCKQUOTE","MAX_TAG_DEEPNESS","parseMessageInput","withMarkdownLinks","skipMarkdown","fragment","parsedHtml","parseMarkdown","RE_LINK_TEMPLATE","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","nodeName","getEntityTypeFromNode","rawIndex","language","getEntityDataFromNode","hasChildNodes","extractorEl","insertHtmlInSelection","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","fileSelector","openSystemFilesDialog","accept","noMultiple","onchange","click"],"sourceRoot":""}