{"version":3,"file":"8661.58bb59b90f0c93112c7e.js","mappings":"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","sources":["webpack://wai/./src/components/common/Avatar.tsx","webpack://wai/./src/components/right/DeleteMemberModal.tsx","webpack://wai/./src/components/ui/ConfirmDialog.tsx","webpack://wai/./src/components/ui/InfiniteScroll.tsx","webpack://wai/./src/components/ui/Modal.tsx","webpack://wai/./src/util/trapFocus.ts","webpack://wai/./src/global/selectors/calls.ts","webpack://wai/./src/global/selectors/limits.ts","webpack://wai/./src/hooks/useInfiniteScroll.ts","webpack://wai/./src/hooks/useInterval.ts","webpack://wai/./src/util/directInputManager.ts","webpack://wai/./src/util/resetScroll.ts","webpack://wai/./src/worker/setting.ts"],"sourcesContent":["import type { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiPhoto, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { AnimationLevel } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { ANIMATION_LEVEL_MAX, IS_TEST } from '../../config';\nimport { VIDEO_AVATARS_DISABLED } from '../../util/environment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserOnline,\n} from '../../global/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName, { createClassNameBuilder } from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLang from '../../hooks/useLang';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './Avatar.scss';\n\nconst LOOP_COUNT = 3;\n\nconst cn = createClassNameBuilder('Avatar');\ncn.media = cn('media');\ncn.icon = cn('icon');\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'mini' | 'small' | 'small-mobile' | 'medium' | 'large' | 'jumbo';\n  chat?: ApiChat;\n  user?: ApiUser;\n  photo?: ApiPhoto;\n  userStatus?: ApiUserStatus;\n  text?: string;\n  isSavedMessages?: boolean;\n  withVideo?: boolean;\n  noLoop?: boolean;\n  loopIndefinitely?: boolean;\n  animationLevel?: AnimationLevel;\n  noPersonalPhoto?: boolean;\n  lastSyncTime?: number;\n  showVideoOverwrite?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  photo,\n  userStatus,\n  text,\n  isSavedMessages,\n  withVideo,\n  noLoop,\n  loopIndefinitely,\n  lastSyncTime,\n  showVideoOverwrite,\n  animationLevel,\n  noPersonalPhoto,\n  observeIntersection,\n  onClick,\n}) => {\n  const { loadFullUser } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const videoLoopCountRef = useRef(0);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  const isForum = chat?.isForum;\n  let imageHash: string | undefined;\n  let videoHash: string | undefined;\n\n  const shouldShowUserVideo = !VIDEO_AVATARS_DISABLED && animationLevel === ANIMATION_LEVEL_MAX\n    && user?.isPremium && user?.hasVideoAvatar;\n  const shouldShowPhotoVideo = showVideoOverwrite && photo?.isVideo;\n  const shouldShowVideo = (\n    isIntersecting && withVideo && (shouldShowPhotoVideo || shouldShowUserVideo)\n  );\n  const profilePhoto = user?.fullInfo?.personalPhoto || user?.fullInfo?.profilePhoto || user?.fullInfo?.fallbackPhoto;\n  const hasProfileVideo = profilePhoto?.isVideo;\n  const shouldLoadVideo = shouldShowVideo && (hasProfileVideo || shouldShowPhotoVideo);\n\n  const shouldFetchBig = size === 'jumbo';\n  if (!isSavedMessages && !isDeleted) {\n    if (user && !noPersonalPhoto) {\n      imageHash = getChatAvatarHash(user, shouldFetchBig ? 'big' : undefined);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat, shouldFetchBig ? 'big' : undefined);\n    } else if (photo) {\n      imageHash = `photo${photo.id}?size=m`;\n      if (photo.isVideo && withVideo) {\n        videoHash = `videoAvatar${photo.id}?size=u`;\n      }\n    }\n\n    if (hasProfileVideo) {\n      videoHash = getChatAvatarHash(user!, undefined, 'video');\n    }\n  }\n\n  const imgBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const videoBlobUrl = useMedia(videoHash, !shouldLoadVideo, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const hasBlobUrl = Boolean(imgBlobUrl || videoBlobUrl);\n  // `videoBlobUrl` can be taken from memory cache, so we need to check `shouldLoadVideo` again\n  const shouldPlayVideo = Boolean(isIntersecting && videoBlobUrl && shouldLoadVideo);\n\n  const { transitionClassNames } = useShowTransition(hasBlobUrl, undefined, hasBlobUrl, 'slow');\n\n  const handleVideoEnded = useCallback((e) => {\n    const video = e.currentTarget;\n    if (!videoBlobUrl) return;\n\n    if (loopIndefinitely) return;\n\n    videoLoopCountRef.current += 1;\n    if (videoLoopCountRef.current >= LOOP_COUNT || noLoop) {\n      video.style.display = 'none';\n    }\n  }, [loopIndefinitely, noLoop, videoBlobUrl]);\n\n  const userId = user?.id;\n  useEffect(() => {\n    if (userId && shouldShowVideo && !profilePhoto) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, profilePhoto, userId, shouldShowVideo]);\n\n  const lang = useLang();\n\n  let content: TeactNode | undefined;\n  const author = user ? getUserFullName(user) : (chat ? getChatTitle(lang, chat) : text);\n\n  if (isSavedMessages) {\n    content = <i className={buildClassName(cn.icon, 'icon-avatar-saved-messages')} role=\"img\" aria-label={author} />;\n  } else if (isDeleted) {\n    content = <i className={buildClassName(cn.icon, 'icon-avatar-deleted-account')} role=\"img\" aria-label={author} />;\n  } else if (isReplies) {\n    content = <i className={buildClassName(cn.icon, 'icon-reply-filled')} role=\"img\" aria-label={author} />;\n  } else if (hasBlobUrl) {\n    content = (\n      <>\n        <img\n          src={imgBlobUrl}\n          className={buildClassName(cn.media, 'avatar-media', transitionClassNames, videoBlobUrl && 'poster')}\n          alt={author}\n          decoding=\"async\"\n        />\n        {shouldPlayVideo && (\n          <OptimizedVideo\n            canPlay\n            src={videoBlobUrl}\n            className={buildClassName(cn.media, 'avatar-media', 'poster')}\n            muted\n            loop={loopIndefinitely}\n            autoPlay\n            disablePictureInPicture\n            playsInline\n            onEnded={handleVideoEnded}\n          />\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const isOnline = !isSavedMessages && user && userStatus && isUserOnline(user, userStatus);\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    isForum && 'forum',\n    isOnline && 'online',\n    onClick && 'interactive',\n    (!isSavedMessages && !imgBlobUrl) && 'no-photo',\n  );\n\n  const hasMedia = Boolean(isSavedMessages || imgBlobUrl);\n  const handleClick = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, hasMedia);\n    }\n  }, [onClick, hasMedia]);\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      data-test-sender-id={IS_TEST ? senderId : undefined}\n      aria-label={typeof content === 'string' ? author : undefined}\n    >\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  areButtonsInColumn?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  areButtonsInColumn,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title || lang('Wai')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { RefObject, UIEvent } from 'react';\nimport { LoadMoreDirection } from '../../types';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\nimport { IS_ANDROID } from '../../util/environment';\nimport buildStyle from '../../util/buildStyle';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const state = stateRef.current;\n\n    state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n    let newScrollTop;\n\n    if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n      const { scrollTop } = container;\n      const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n      newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n    } else {\n      const nextAnchor = state.listItemElements[0];\n      if (nextAnchor) {\n        state.currentAnchor = nextAnchor;\n        state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n      }\n    }\n\n    if (withAbsolutePositioning || noScrollRestore) {\n      return;\n    }\n\n    if (noScrollRestoreOnTop && container.scrollTop === 0) {\n      return;\n    }\n\n    resetScroll(container, newScrollTop);\n\n    state.isScrollTopJustUpdated = true;\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import type { GlobalState } from '../types';\nimport { selectChat } from './chats';\nimport { isChatBasicGroup } from '../helpers';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const chat = selectChat(global, chatId);\n  if (!chat || !chat.fullInfo || !chat.fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, chat.fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n","import type { ApiLimitType, GlobalState } from '../types';\nimport { selectIsCurrentUserPremium } from './users';\nimport { DEFAULT_LIMITS } from '../../config';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  const value = limits[limit][isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: string | number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nconst useInfiniteScroll = <ListId extends string | number>(\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: ListId[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n): [ListId[]?, GetMore?] => {\n  const lastParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: ListId;\n  }>();\n\n  const viewportIdsRef = useRef<ListId[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || lastParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, LoadMoreDirection.Forwards, listSlice, listIds[0]);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  if (isDisabled) {\n    lastParamsRef.current = {};\n  }\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { offsetId = listIds[0], direction = LoadMoreDirection.Forwards } = lastParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (!viewportIdsRef.current || !areSortedArraysEqual(viewportIdsRef.current, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  } else if (!listIds) {\n    viewportIdsRef.current = undefined;\n  }\n\n  const getMore: GetMore = useCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    if (!noScroll) {\n      lastParamsRef.current = { ...lastParamsRef.current, direction, offsetId };\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice<ListId extends string | number>(\n  sourceIds: ListId[],\n  direction: LoadMoreDirection,\n  listSlice: number,\n  offsetId?: ListId,\n) {\n  const { length } = sourceIds;\n  const index = offsetId ? sourceIds.indexOf(offsetId) : 0;\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection > 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n\nexport default useInfiniteScroll;\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n    if (!noFirst) savedCallback.current();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import { IS_IOS } from './environment';\nimport forceReflow from './forceReflow';\n\nconst resetScroll = (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n\n// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1264266\nexport function patchChromiumScroll(element: HTMLElement) {\n  element.style.display = 'none';\n  forceReflow(element);\n  element.style.display = '';\n}\n\nexport default resetScroll;\n","import {PbChatGptConfig_Type} from \"../lib/ptp/protobuf/PTPCommon/types\";\n\nexport const UserIdFirstBot = \"1000\";\nexport const UserIdCnPrompt = \"1010\";\nexport const UserIdEnPrompt = \"1011\";\nexport const UserIdChatGpt = \"1012\";\n\nexport const NameFirstBot = \"Wai\";\nexport const DEFAULT_CREATE_USER_BIO = '我是一个AI机器人'\nexport const DEFAULT_PROMPT = '你现在是一个优秀的助手，请用中文回答我的问题。'\nexport const BOT_FOLDER_TITLE = '机器人'\nexport const BOT_FOLDER_ID = 1\n\nexport const ChatModelConfig:PbChatGptConfig_Type = {\n  model: \"gpt-3.5-turbo\",\n  temperature: 1,\n  max_tokens: 2000,\n  presence_penalty: 0,\n}\n\nexport const DEFAULT_AI_CONFIG_COMMANDS = [\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"start\",\n    \"description\": \"开始对话\"\n  },\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"setting\",\n    \"description\": \"设置\"\n  },\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"aiModel\",\n    \"description\": \"设置AI模型\"\n  },\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"apiKey\",\n    \"description\": \"设置apiKey\"\n  },\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"initPrompt\",\n    \"description\": \"初始化上下文Prompt\"\n  },\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"enableAi\",\n    \"description\": \"开启或者关闭AI\"\n  },\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"clearHistory\",\n    \"description\": \"清除历史记录\"\n  },\n]\nexport const DEFAULT_BOT_COMMANDS = [\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"start\",\n    \"description\": \"开始对话\"\n  },\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"setting\",\n    \"description\": \"设置\"\n  },\n  {\n    \"botId\": UserIdFirstBot,\n    \"command\": \"lab\",\n    \"description\": \"实验室\"\n  },\n]\n\nexport const CurrentUserInfo = {\n  \"id\": \"1\",\n  \"accessHash\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"canBeInvitedToGroup\": false,\n  \"hasVideoAvatar\": false,\n  \"isMin\": false,\n  \"isPremium\": false,\n  \"noStatus\": true,\n  \"fullInfo\": {\n    \"isBlocked\": false,\n    \"noVoiceMessages\": false,\n    \"bio\": \"\",\n  },\n  \"usernames\": [\n    {\n      \"username\": \"my-self\",\n      \"isActive\": true,\n      \"isEditable\": true\n    }\n  ],\n  \"type\": \"userTypeBot\",\n  \"phoneNumber\": \"\",\n  \"avatarHash\": \"\",\n  \"isSelf\": true\n}\n\nexport let LoadAllChats = {\n  \"users\": [\n    {...CurrentUserInfo},\n    {\n      \"id\": UserIdFirstBot,\n      \"fullInfo\": {\n        \"isBlocked\": false,\n        \"noVoiceMessages\": false,\n        \"bio\": DEFAULT_CREATE_USER_BIO,\n        \"botInfo\": {\n          \"botId\": UserIdFirstBot,\n          \"description\": DEFAULT_CREATE_USER_BIO,\n          aiType:\"ChatGpt\",\n          \"menuButton\": {\n            \"type\": \"commands\"\n          },\n          \"commands\": DEFAULT_BOT_COMMANDS\n        }\n      },\n      bot:{\n        chatGptConfig:{\n          config:ChatModelConfig,\n          api_key:\"\",\n          init_system_content:DEFAULT_PROMPT,\n          max_history_length:4,\n        },\n        enableAi:true,\n      },\n      \"accessHash\": \"\",\n      \"firstName\": NameFirstBot,\n      \"lastName\": \"\",\n      \"canBeInvitedToGroup\": false,\n      \"hasVideoAvatar\": false,\n      \"isMin\": false,\n      \"isPremium\": true,\n      \"noStatus\": true,\n      \"usernames\": [\n        {\n          \"username\": \"first_bot\",\n          \"isActive\": true,\n          \"isEditable\": true\n        }\n      ],\n      \"type\": \"userTypeBot\",\n      \"phoneNumber\": \"\",\n      \"avatarHash\": \"\",\n      \"isSelf\": false\n    }\n  ],\n  \"chats\": [\n    {\n      \"id\": UserIdFirstBot,\n      \"title\":  NameFirstBot,\n      \"type\": \"chatTypePrivate\",\n      \"isMuted\": false,\n      \"isMin\": false,\n      \"hasPrivateLink\": false,\n      \"isSignaturesShown\": false,\n      \"isVerified\": true,\n      \"isJoinToSend\": true,\n      \"isJoinRequest\": true,\n      \"isForum\": false,\n      \"isListed\": true,\n      \"settings\": {\n        \"isAutoArchived\": false,\n        \"canReportSpam\": false,\n        \"canAddContact\": false,\n        \"canBlockContact\": false\n      },\n      \"accessHash\": \"\"\n    }\n  ],\n  \"chatFolders\": [\n    {\n      \"id\": BOT_FOLDER_ID,\n      \"title\": BOT_FOLDER_TITLE,\n      \"includedChatIds\": [\n        UserIdFirstBot\n      ],\n      \"channels\": false,\n      \"pinnedChatIds\": [],\n      \"excludedChatIds\": []\n    }\n  ],\n  folderIds:[\n    0,\n    BOT_FOLDER_ID\n  ],\n  \"draftsById\": {},\n  \"replyingToById\": {},\n  \"orderedPinnedIds\": [],\n}\nexport const TEXT_AI_THINKING = \"...\"\nexport const BYPASS_API = [\n  \"editChatFolder\",\"sortChatFolders\",\"deleteChatFolder\",\n  \"requestWebView\",\"uploadContactProfilePhoto\",\n  \"sendMessage\",\"editMessage\",\"deleteMessages\",\"downloadMedia\",\"destroy\",\"fetchMessages\",\"answerCallbackButton\",\n  \"uploadProfilePhoto\",\"fetchChats\",\"sendWithCallback\",\"msgClientLogin\",\"updateProfile\",\"updateUsername\"\n]\nexport const MaxSyncUserToRemote = 5;\nexport const MaxSyncMessageToRemote = 10;\nexport const BOTTOM_INPUT_LEFT_MARGIN = 'width:4px;'\n\nexport const SWAGGER_DOC = {\n  schema: {\n    info: {\n      title: 'Worker Wai Chat',\n      version: '1.0',\n    },\n    components: {\n      securitySchemes: {\n        bearerAuth: {\n          type: 'http',\n          scheme: 'bearer',\n        },\n      },\n    },\n    security: [\n      {\n        bearerAuth: [],\n      },\n    ],\n  },\n};\n\nexport const AI_START_TIPS =  `你可以通过发送以下命令来控制我：\n\n/setting - 设置面板\n\n/aiModel - 当前模型\n/apiKey - 设置ApiKey\n/initPrompt - 设置初始化上下文Prompt, 每次请求都会带入\n/enableAi - 开启或者关闭AI\n`\n\nexport const DEFAULT_START_TIPS =    `你可以通过发送以下命令来控制我：\n\n/setting - 设置面板\n\n/lab - 实验室\n\n  * 创建 ChatGpt机器人\n  * 创建 中文Prompt大全\n  * 创建 英文Prompt大全\n\n`\n"],"names":["cn","createClassNameBuilder","media","icon","memo","Avatar","className","size","chat","user","photo","userStatus","text","isSavedMessages","withVideo","noLoop","loopIndefinitely","lastSyncTime","showVideoOverwrite","animationLevel","noPersonalPhoto","observeIntersection","onClick","loadFullUser","getActions","ref","useRef","videoLoopCountRef","isIntersecting","useIsIntersecting","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","id","isForum","imageHash","videoHash","shouldShowUserVideo","VIDEO_AVATARS_DISABLED","ANIMATION_LEVEL_MAX","isPremium","hasVideoAvatar","shouldShowPhotoVideo","isVideo","shouldShowVideo","profilePhoto","fullInfo","personalPhoto","fallbackPhoto","hasProfileVideo","shouldLoadVideo","shouldFetchBig","getChatAvatarHash","undefined","imgBlobUrl","useMedia","ApiMediaFormat","videoBlobUrl","hasBlobUrl","Boolean","shouldPlayVideo","transitionClassNames","useShowTransition","handleVideoEnded","useCallback","e","video","currentTarget","current","style","display","userId","useEffect","lang","useLang","content","author","getUserFullName","getChatTitle","React","buildClassName","role","src","alt","decoding","OptimizedVideo","canPlay","muted","loop","autoPlay","disablePictureInPicture","playsInline","onEnded","userFullName","getFirstLetters","title","isUserId","isOnline","isUserOnline","fullClassName","getUserColorKey","hasMedia","handleClick","senderId","IS_TEST","renderText","withGlobal","global","selectCurrentChat","selectUser","contactName","getUserFirstOrLastName","DeleteMemberModal","isOpen","onClose","deleteChatMember","handleDeleteChatMember","chatId","ConfirmDialog","textParts","confirmLabel","confirmHandler","confirmIsDestructive","onCloseAnimationEnd","header","areButtonsInColumn","children","containerRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","split","map","textPart","onKeyDown","Button","isText","color","InfiniteScroll","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","useMemo","debounce","noScroll","direction","LoadMoreDirection","length","scrollHeight","clientHeight","useLayoutEffect","container","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","includes","scrollTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","newAnchorTop","offsetParent","teactFastList","buildStyle","IS_ANDROID","dialogRef","isSlim","hasCloseButton","noBackdrop","noBackdropClose","onEnter","shouldSkipHistoryAnimations","shouldRender","modalRef","disableDirectTextInput","enableDirectTextInput","captureKeyboardListeners","onEsc","element","key","preventDefault","stopPropagation","focusableElements","currentFocusedIndex","findIndex","em","isSameNode","document","activeElement","newFocusedIndex","shiftKey","focus","addEventListener","removeEventListener","trapFocus","useHistoryBack","isActive","onBack","useEffectWithPrevDeps","prevIsOpen","body","classList","toggle","dispatchHeavyAnimationEvent","remove","Portal","tabIndex","round","ariaLabel","selectChatGroupCall","selectChat","groupCallId","selectGroupCall","groupCalls","byId","selectGroupCallParticipant","participantId","participants","selectIsAdminInActiveGroupCall","selectActiveGroupCall","isChatBasicGroup","isCreator","adminRights","manageCall","activeGroupCallId","selectPhoneCallUser","phoneCall","currentUserId","adminId","selectCurrentLimit","limit","_limits$limit","appConfig","DEFAULT_LIMITS","selectIsCurrentUserPremium","limits","value","selectPremiumLimit","getViewportSlice","sourceIds","listSlice","offsetId","indexOf","indexForDirection","Math","max","to","newViewportIds","slice","areSomeLocal","areAllLocal","useInfiniteScroll","listIds","isDisabled","lastParamsRef","viewportIdsRef","forceUpdate","useForceUpdate","prevListIds","usePrevious","prevIsDisabled","areSortedArraysEqual","getMore","viewportIds","callback","delay","noFirst","savedCallback","setInterval","clearInterval","counter","getIsDirectTextInputDisabled","patchChromiumScroll","forceReflow","IS_IOS","overflow","UserIdFirstBot","UserIdCnPrompt","UserIdEnPrompt","UserIdChatGpt","DEFAULT_CREATE_USER_BIO","DEFAULT_PROMPT","ChatModelConfig","model","temperature","max_tokens","presence_penalty","DEFAULT_AI_CONFIG_COMMANDS","DEFAULT_BOT_COMMANDS","LoadAllChats","aiType","bot","chatGptConfig","config","api_key","init_system_content","max_history_length","enableAi","folderIds","TEXT_AI_THINKING","BOTTOM_INPUT_LEFT_MARGIN","AI_START_TIPS","DEFAULT_START_TIPS"],"sourceRoot":""}