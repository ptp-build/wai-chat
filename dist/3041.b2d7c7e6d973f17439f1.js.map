{"version":3,"file":"3041.b2d7c7e6d973f17439f1.js","mappings":"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","sources":["webpack://wai/./src/components/common/TrackingMonkey.tsx","webpack://wai/./src/components/auth/AuthCode.tsx","webpack://wai/./src/components/auth/AuthPassword.tsx","webpack://wai/./src/components/auth/AuthRegister.tsx","webpack://wai/./src/components/auth/AuthRegisterEmail.tsx","webpack://wai/./src/components/auth/AuthSignPassword.tsx","webpack://wai/./src/components/common/PasswordForm.tsx","webpack://wai/./src/components/common/PasswordMonkey.tsx","webpack://wai/./src/components/ui/AvatarEditable.tsx","webpack://wai/./src/components/ui/CropModal.tsx","webpack://wai/./src/components/ui/Modal.tsx","webpack://wai/./src/util/trapFocus.ts","webpack://wai/./src/components/ui/TextArea.tsx","webpack://wai/./src/hooks/useTimeout.ts","webpack://wai/./src/lib/ptp/protobuf/PTPCommon/PbMsg.ts","webpack://wai/./src/lib/ptp/protobuf/PTPCommon/PbQrCode.ts","webpack://wai/./src/lib/ptp/protobuf/PTPCommon/PbUser.ts","webpack://wai/./src/util/directInputManager.ts","webpack://wai/./src/util/stopEvent.ts","webpack://wai/./src/worker/share/utils/utils.ts"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { useState, useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  code: string;\n  codeLength: number;\n  trackingDirection: number;\n  isTracking: boolean;\n  isBig?: boolean;\n};\n\nconst TRACKING_START_FRAME = 15;\nconst TRACKING_END_FRAME = 180;\n\nconst TrackingMonkey: FC<OwnProps> = ({\n  code,\n  codeLength,\n  trackingDirection,\n  isTracking,\n  isBig,\n}) => {\n  const [isFirstMonkeyLoaded, setIsFirstMonkeyLoaded] = useState(false);\n  const { isMobile } = useAppLayout();\n  const trackningFramesPerSymbol = (TRACKING_END_FRAME - TRACKING_START_FRAME) / codeLength;\n  const stickerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  const handleFirstMonkeyLoad = useCallback(() => setIsFirstMonkeyLoaded(true), []);\n\n  function getTrackingFrames(): [number, number] {\n    const startFrame = (code && code.length > 1) || trackingDirection < 0\n      ? TRACKING_START_FRAME + trackningFramesPerSymbol * (code.length - 1)\n      : 0;\n    const endFrame = code.length === codeLength\n      ? TRACKING_END_FRAME\n      : TRACKING_START_FRAME + trackningFramesPerSymbol * code.length;\n\n    if (trackingDirection < 1) {\n      return [\n        endFrame,\n        startFrame,\n      ];\n    }\n\n    return [\n      startFrame,\n      endFrame,\n    ];\n  }\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={isTracking ? 'hidden' : undefined}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyIdle}\n        play={!isTracking}\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={!isTracking ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyTracking}\n        playSegment={isTracking ? getTrackingFrames() : undefined}\n        speed={2}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(TrackingMonkey);\n","import type { FormEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, useCallback, memo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\nimport type { GlobalState } from '../../global/types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport TrackingMonkey from '../common/TrackingMonkey';\n\ntype StateProps = Pick<GlobalState, 'authPhoneNumber' | 'authIsCodeViaApp' | 'authIsLoading' | 'authError'>;\n\nconst CODE_LENGTH = 5;\n\nconst AuthCode: FC<StateProps> = ({\n  authPhoneNumber,\n  authIsCodeViaApp,\n  authIsLoading,\n  authError,\n}) => {\n  const {\n    setAuthCode,\n    returnToAuthPhoneNumber,\n    clearAuthError,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [code, setCode] = useState<string>('');\n  const [isTracking, setIsTracking] = useState(false);\n  const [trackingDirection, setTrackingDirection] = useState(1);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, []);\n\n  useHistoryBack({\n    isActive: true,\n    onBack: returnToAuthPhoneNumber,\n  });\n\n  const onCodeChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n\n    const { currentTarget: target } = e;\n    target.value = target.value.replace(/[^\\d]+/, '').substr(0, CODE_LENGTH);\n\n    if (target.value === code) {\n      return;\n    }\n\n    setCode(target.value);\n\n    if (!isTracking) {\n      setIsTracking(true);\n    } else if (!target.value.length) {\n      setIsTracking(false);\n    }\n\n    if (code && code.length > target.value.length) {\n      setTrackingDirection(-1);\n    } else {\n      setTrackingDirection(1);\n    }\n\n    if (target.value.length === CODE_LENGTH) {\n      setAuthCode({ code: target.value });\n    }\n  }, [authError, clearAuthError, code, isTracking, setAuthCode]);\n\n  function handleReturnToAuthPhoneNumber() {\n    returnToAuthPhoneNumber();\n  }\n\n  return (\n    <div id=\"auth-code-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <TrackingMonkey\n          code={code}\n          codeLength={CODE_LENGTH}\n          isTracking={isTracking}\n          trackingDirection={trackingDirection}\n        />\n        <h1>\n          {authPhoneNumber}\n          <div\n            className=\"auth-number-edit\"\n            onClick={handleReturnToAuthPhoneNumber}\n            role=\"button\"\n            tabIndex={0}\n            title={lang('WrongNumber')}\n          >\n            <i className=\"icon-edit\" />\n          </div>\n        </h1>\n        <p className=\"note\">\n          {renderText(lang(authIsCodeViaApp ? 'SentAppCode' : 'Login.JustSentSms'), ['simple_markdown'])}\n        </p>\n        <InputText\n          ref={inputRef}\n          id=\"sign-in-code\"\n          label={lang('Code')}\n          onInput={onCodeChange}\n          value={code}\n          error={authError && lang(authError)}\n          autoComplete=\"off\"\n          inputMode=\"numeric\"\n        />\n        {authIsLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authPhoneNumber', 'authIsCodeViaApp', 'authIsLoading', 'authError']),\n)(AuthCode));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport MonkeyPassword from '../common/PasswordMonkey';\nimport PasswordForm from '../common/PasswordForm';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError' | 'authHint'>;\n\nconst AuthPassword: FC<StateProps> = ({\n  authIsLoading, authError, authHint,\n}) => {\n  const { setAuthPassword, clearAuthError } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback((password: string) => {\n    setAuthPassword({ password });\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{lang('Login.Header.Password')}</h1>\n        <p className=\"note\">{lang('Login.EnterPasswordDescription')}</p>\n        <PasswordForm\n          clearError={clearAuthError}\n          error={authError && lang(authError)}\n          hint={authHint}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authError', 'authHint']),\n)(AuthPassword));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useState, memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport AvatarEditable from '../ui/AvatarEditable';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError'>;\n\nconst AuthRegister: FC<StateProps> = ({\n  authIsLoading, authError,\n}) => {\n  const { signUp, clearAuthError, uploadProfilePhoto } = getActions();\n\n  const lang = useLang();\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [croppedFile, setCroppedFile] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const handleFirstNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n\n    const { target } = event;\n\n    setFirstName(target.value);\n    setIsButtonShown(target.value.length > 0);\n  }, [authError, clearAuthError]);\n\n  const handleLastNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    setLastName(target.value);\n  }, []);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    signUp({ firstName, lastName });\n\n    if (croppedFile) {\n      uploadProfilePhoto({ file: croppedFile });\n    }\n  }\n\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <AvatarEditable onChange={setCroppedFile} />\n          <h2>{lang('YourName')}</h2>\n          <p className=\"note\">{lang('Login.Register.Desc')}</p>\n          <InputText\n            id=\"registration-first-name\"\n            label={lang('Login.Register.FirstName.Placeholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={authError && lang(authError)}\n            autoComplete=\"given-name\"\n          />\n          <InputText\n            id=\"registration-last-name\"\n            label={lang('Login.Register.LastName.Placeholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n            autoComplete=\"family-name\"\n          />\n          {isButtonShown && (\n            <Button type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authError']),\n)(AuthRegister));\n","import type {ChangeEvent} from 'react';\nimport {MouseEvent as ReactMouseEvent} from \"react\";\nimport type {FC} from '../../lib/teact/teact';\nimport React, {memo, useCallback, useEffect, useState} from '../../lib/teact/teact';\nimport {getActions, withGlobal} from '../../global';\nimport github from '../../assets/oauth/github.svg';\nimport google from '../../assets/oauth/google.svg';\nimport type {GlobalState} from '../../global/types';\n\nimport {pick} from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport PasswordForm from \"../common/PasswordForm\";\nimport {sha1} from '../../lib/gramjs/Helpers';\n\nimport {parseQueryFromUrl} from \"../../worker/share/utils/utils\";\nimport {CLOUD_MESSAGE_API, SESSION_TOKEN, TEST_PWD, TEST_USERNAME} from \"../../config\";\nimport {getIsMobile} from \"../../hooks/useAppLayout\";\nimport {isEmailValid} from \"../../worker/share/utils/utils\";\nimport {passwordCheck} from \"../../worker/share/utils/helpers\";\n\ntype StateProps = Pick<GlobalState, 'authError'>;\nlet handleTokenGoing = false;\nconst AuthRegisterEmail: FC<StateProps> = ({\n  authError,\n}) => {\n\n  const { clearAuthError, showAuthError,updateGlobal } = getActions();\n\n  const lang = useLang();\n  const [isOAuthLoginOk, setIsOAuthLoginOk] = useState(false);\n  const [isRegMode, setIsRegMode] = useState(false);\n  const [email, setEmail] = useState(TEST_USERNAME);\n  const [isButtonShown, setIsButtonShown] = useState(isEmailValid(email));\n  const [password, setPassword] = useState(TEST_PWD);\n  const [passwordRepeat, setPasswordRepeat] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [passwordRepeatError, setPasswordRepeatError] = useState('');\n  const [authIsLoading,setAuthIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showPasswordRepeat, setShowPasswordRepeat] = useState(false);\n\n  const toggleRegMode = useCallback((event: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setIsRegMode(!isRegMode);\n  }, [isRegMode]);\n\n  const handleEmailChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n    const { target } = event;\n    setEmail(target.value);\n    setIsButtonShown(isEmailValid(target.value));\n  }, [authError, clearAuthError]);\n\n  const handlePasswordChange = useCallback((password:string) => {\n    if (passwordError) {\n      setPasswordError(\"\");\n    }\n    if (authError) {\n      clearAuthError();\n    }\n\n    setPassword(password);\n  }, [passwordError, setPasswordError,clearAuthError]);\n\n  const handlePasswordRepeatChange = useCallback((password:string) => {\n    if (passwordRepeatError) {\n      setPasswordRepeatError(\"\");\n    }\n\n    if (authError) {\n      clearAuthError();\n    }\n    setPasswordRepeat(password);\n  }, [passwordRepeatError,setPasswordRepeatError, clearAuthError]);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleChangePasswordRepeatVisibility = useCallback((isVisible) => {\n    setShowPasswordRepeat(isVisible);\n  }, []);\n\n  async function handleSubmit(event: any) {\n    event.preventDefault();\n\n    if(!isEmailValid(email) ){\n      return showAuthError(\"Email不合法\")\n    }\n\n    if(!passwordCheck(password)){\n      return setPasswordError(lang(\"PasswordTipsCheck\"))\n    }\n    if(isOAuthLoginOk){\n      const pwd1 = await sha1(password.toString());\n      const params = {\n        password:pwd1.toString(\"hex\")\n      }\n      setAuthIsLoading(true)\n      try{\n        const response = await fetch(`${CLOUD_MESSAGE_API}/auth/password`, {\n          method: 'POST',\n          headers: {\n            \"Accept\": 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(params),\n        });\n        const result = await response.json();\n        if (result.err_msg) {\n          return showAuthError(result.err_msg)\n        }else{\n          handleAuthOkJump()\n        }\n      }catch (e){\n        showAuthError(\"登录异常\")\n      }finally {\n        setAuthIsLoading(false)\n      }\n      return;\n    }\n    if(isRegMode){\n      if(password != passwordRepeat){\n        return setPasswordRepeatError(\"两次输入的密码不一致\")\n      }\n    }\n\n    const pwd = password === TEST_PWD ? \"da39a3ee5e6b4b0d3255bfef95601890afd80709\" : await sha1(password.toString());\n    const params = {\n      email,\n      password:pwd.toString(\"hex\")\n    }\n    setAuthIsLoading(true)\n    try{\n      const response = await fetch(`${CLOUD_MESSAGE_API}/auth/${isRegMode?\"reg\":\"login\"}`, {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(params),\n      });\n      const result = await response.json();\n      if (result.err_msg) {\n        return showAuthError(result.err_msg)\n      }else{\n        handleAuthOk(result)\n        handleAuthOkJump()\n      }\n    }catch (e){\n      showAuthError(\"登录异常\")\n    }finally {\n      setAuthIsLoading(false)\n    }\n  }\n\n  const handleAuthOkJump = ()=>{\n    updateGlobal({\n      authState:\"authorizationStateReady\"\n    });\n  }\n  // @ts-ignore\n  const handleAuthOk = ({token,user})=>{\n    localStorage.setItem(SESSION_TOKEN,JSON.stringify({token,user}));\n    // if(MsgConn.getMsgClient() && MsgConn.getMsgClient()?.getState() == MsgClientState.connected){\n    //   // @ts-ignore\n    //   MsgConn.getMsgClient()?.login(token);\n    // }\n  }\n  useEffect(()=>{\n    const {query} = parseQueryFromUrl(window.location.href);\n    const {code,email} = query;\n    const handleToken = async ()=>{\n      try{\n        const response = await fetch(`${CLOUD_MESSAGE_API}/auth/token`, {\n          method: 'POST',\n          headers: {\n            \"Accept\": 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            code\n          }),\n        });\n        const result = await response.json();\n        if(!result.err_msg){\n          // setEmail(result.user.email);\n          // setPasswordError(\"设置密码\");\n          // setIsOAuthLoginOk(true);\n          handleAuthOk(result)\n          handleAuthOkJump()\n        }else{\n          showAuthError(result.err_msg)\n        }\n      }catch (e){\n        showAuthError(\"network error\")\n      }\n    }\n    if(code && !handleTokenGoing){\n      handleTokenGoing = true;\n      setEmail(email);\n      setAuthIsLoading(true)\n      setIsButtonShown(true);\n      handleToken().then(()=>{\n        window.history.replaceState({}, '', window.location.href.split(\"?\")[0]);\n      }).finally(()=>{\n        handleTokenGoing = false;\n        setAuthIsLoading(false)\n      })\n    }\n  },[])\n\n  useEffect(()=>{\n    const {query} = parseQueryFromUrl(window.location.href);\n    const {err_msg} = query;\n    if(err_msg){\n      showAuthError(err_msg)\n      window.history.replaceState({}, '', window.location.href.split(\"?\")[0]);\n    }\n  },[])\n\n  const handleClose = useCallback(() => {\n    updateGlobal({\n      authState:\"authorizationStateReady\"\n    })\n  }, [updateGlobal]);\n\n  const isMobile = getIsMobile();\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className={'auth-close'}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleClose}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      </div>\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <h2>Wai</h2>\n          <p className=\"note\">An Ai Chat Application</p>\n          <InputText\n            onFocus={clearAuthError}\n            id=\"registration-email\"\n            type={\"email\"}\n            label={\"Email\"}\n            onChange={handleEmailChange}\n            value={email}\n            error={authError && lang(authError) || \"\"}\n            autoComplete=\"given-name\"\n          />\n          <PasswordForm\n            clearError={()=>setPasswordError(\"\")}\n            error={passwordError && lang(passwordError)}\n            isPasswordVisible={showPassword}\n            onChangePasswordVisibility={handleChangePasswordVisibility}\n            onInputChange={handlePasswordChange}\n          />\n          {\n            isRegMode &&\n            <PasswordForm\n              placeholder={\"Repeat Password\"}\n              clearError={()=>setPasswordRepeatError(\"\")}\n              error={passwordRepeatError && lang(passwordRepeatError)}\n              isPasswordVisible={showPasswordRepeat}\n              onChangePasswordVisibility={handleChangePasswordRepeatVisibility}\n              onInputChange={handlePasswordRepeatChange}\n            />\n          }\n          {isButtonShown && (\n            <Button type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n        {\n          !isRegMode ?\n            <div className={\"auth-tips\"}>\n                Don't have an account? <u className={\"auth-tips-action\"} onClick={toggleRegMode}>Sign up</u>\n            </div>:\n            <div className={\"auth-tips\"}>\n              Already have an account? <u className={\"auth-tips-action\"} onClick={toggleRegMode}>Log in</u>\n            </div>\n        }\n\n        <div className={\"auth-or-line\"}>\n          <div className={\"auth-line\"}></div>\n          <div className={\"auth-or\"}>OR</div>\n        </div>\n        <div className=\"oauth-btn\">\n          <Button type=\"button\" onClick={()=>{\n            window.location.href = `${CLOUD_MESSAGE_API}/auth/github`;\n          }} className=\"Button translucent round\" aria-label=\"Github\" style=\"\">\n            <img src={github} alt=\"Github\"/>\n          </Button>\n          <Button type=\"button\" onClick={()=>{\n            window.location.href = `${CLOUD_MESSAGE_API}/auth/google`;\n          }} className=\"Button translucent round\" aria-label=\"Google\" style=\"\">\n            <img src={google} alt=\"Google\"/>\n          </Button>\n        </div>\n      </div>\n      {\n        isMobile &&\n        <div style={\"height:500px\"}></div>\n      }\n\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authError']),\n)(AuthRegisterEmail));\n","import type {FC} from '../../lib/teact/teact';\nimport React, {memo, useCallback, useState} from '../../lib/teact/teact';\nimport {getActions, withGlobal} from '../../global';\n\nimport type {GlobalState} from '../../global/types';\n\nimport {pick} from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport MonkeyPassword from '../common/PasswordMonkey';\nimport PasswordForm from '../common/PasswordForm';\nimport Button from \"../ui/Button\";\nimport {hashSha256, passwordCheck} from \"../../worker/share/utils/helpers\";\nimport TextArea from \"../ui/TextArea\";\nimport Mnemonic from \"../../lib/ptp/wallet/Mnemonic\";\nimport {Decoder} from '@nuintun/qrcode';\nimport {PbQrCode} from \"../../lib/ptp/protobuf/PTPCommon\";\nimport {Pdu} from \"../../lib/ptp/protobuf/BaseMsg\";\nimport {QrCodeType} from \"../../lib/ptp/protobuf/PTPCommon/types\";\nimport {aesDecrypt} from \"../../util/passcode\";\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError' | 'authHint'| 'currentAccountAddress' | 'session'>;\n\nconst AuthSignPassword: FC<StateProps> = ({\n  authIsLoading, authError,session\n}) => {\n  const { setAuthPassword, clearAuthError,showAuthError } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n  const [mnemonic, setMnemonic] = useState(\"\");\n  const [mnemonicError, setMnemonicError] = useState(\"\");\n  const [showMnemonic, setShowMnemonic] = useState(false);\n\n  const getMaxLengthIndicator = ()=>{\n    const t = mnemonic.trim().split(\" \")\n    return (mnemonic.trim().length === 0 ? 0 : t.length).toString()\n  }\n\n  const handleShowMnemonic = useCallback(() => {\n    setShowMnemonic(!showMnemonic);\n    setMnemonic(\"\")\n  }, [showMnemonic,setShowMnemonic]);\n\n  const handleGenMnemonic = useCallback(() => {\n    const mnemonicObj = new Mnemonic();\n    setMnemonic(mnemonicObj.getWords());\n  }, [setMnemonic]);\n\n  const handleUploadChange = useCallback((e) => {\n    const file = e.target.files[0];\n    const qrcode = new Decoder();\n    const blob = new Blob([file], { type: file.type });\n    const blobUrl = URL.createObjectURL(blob);\n\n    qrcode\n      .scan(blobUrl)\n      .then(result => {\n        setMnemonic(result.data)\n      })\n      .catch(error => {\n          alert(\"二维码解析失败\")\n      });\n\n  }, [setMnemonic]);\n\n\n  const handleUploadQrcode = useCallback(() => {\n    // @ts-ignore\n    document.querySelector(\"#upload_qrcode\").click()\n  }, [setMnemonic]);\n\n  const onChangeMnemonic = useCallback((e) => {\n    setMnemonicError(\"\")\n    setMnemonic(e.target.value);\n  }, []);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback(async (password: string) => {\n    if(!passwordCheck(password)){\n      return showAuthError(lang(\"PasswordTipsCheck\"))\n    }\n    let mnemonic_ = mnemonic.trim();\n    if(showMnemonic){\n      if(mnemonic.startsWith('wai://')){\n        const qrcodeData = mnemonic.replace('wai://','')\n        const qrcodeDataBuf = Buffer.from(qrcodeData,'hex')\n        const decodeRes = PbQrCode.parseMsg(new Pdu(qrcodeDataBuf))\n        if(decodeRes){\n          const {type,data} = decodeRes;\n          if(type !== QrCodeType.QrCodeType_MNEMONIC){\n            return setMnemonicError(\"解析二维码失败\")\n          }\n          try {\n            const res = await aesDecrypt(data,Buffer.from(hashSha256(password),\"hex\"))\n            if(res){\n              mnemonic_ = res.toString()\n            }else{\n              return setMnemonicError(\"解析二维码失败\")\n            }\n          }catch (e){\n            return setMnemonicError(\"解密二维码失败\")\n          }\n        }else{\n          return setMnemonicError(\"解析二维码失败\")\n        }\n      }else{\n        if(getMaxLengthIndicator() !== \"12\"){\n          return setMnemonicError(\"助记词需12个单词\")\n        }\n      }\n      const m = new Mnemonic(mnemonic_);\n      if(!m.checkMnemonic()){\n        return setMnemonicError(\"助记词不合法，请输入12个单词,用空格分割\")\n      }\n    }\n\n    setAuthPassword({ password,mnemonic:mnemonic_});\n  }, [setAuthPassword,mnemonic,showMnemonic]);\n\n  const handleClose = useCallback(() => {\n    getActions().updateGlobal({\n      authState:\"authorizationStateReady\"\n    })\n    getActions().loadAllChats({listType:'active',shouldReplace:true})\n\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      {\n        !session &&\n        <div className={'auth-close'}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        </div>\n      }\n\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{showMnemonic ? `助记词导入` : lang('Login.Header.Password')}</h1>\n        <p className=\"note\"></p>\n\n        {\n          showMnemonic &&  <TextArea\n            noReplaceNewlines={true}\n            error={mnemonicError || \"\"}\n            inputMode={'text'}\n            value={mnemonic}\n            onChange={onChangeMnemonic}\n            label={\"助记词\"}\n            disabled={authIsLoading}\n            maxLength={1000}\n            maxLengthIndicator={getMaxLengthIndicator()}\n          />\n        }\n\n        <PasswordForm\n          clearError={clearAuthError}\n          error={authError && lang(authError)}\n          hint={lang(\"PasswordTipsLoginPlaceholder\")}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n\n        <div className={\"auth-or-line\"}>\n          <div className={\"auth-line\"}></div>\n          <div className={\"auth-or\"}>OR</div>\n        </div>\n        {\n          showMnemonic &&\n          <Button isText onClick={handleGenMnemonic}>助记词生成</Button>\n        }\n        {\n          showMnemonic &&(\n            <>\n              <input style={\"display:none\"} onChange={handleUploadChange} type=\"file\" id={\"upload_qrcode\"}/>\n              <Button isText onClick={handleUploadQrcode}>二维码登录</Button></>\n          )\n\n        }\n        <Button isText onClick={handleShowMnemonic}>{showMnemonic ? \"密码登录\" : \"助记词登录\"}</Button>\n\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, [\"session\",\"currentAccountAddress\",'authIsLoading', 'authError', 'authHint']),\n)(AuthSignPassword));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport {MIN_PASSWORD_LENGTH, TEST_PWD} from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState(TEST_PWD);\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue && !TEST_PWD) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n    if(inputRef && inputRef.current.value){\n      setCanSubmit(true);\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          onKeyDown={(e)=>{\n            if(e.code == \"Enter\" && !onSubmit){\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n          }}\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          multiple={true}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={isPasswordVisible ? 'icon-eye' : 'icon-eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport useTimeout from '../../hooks/useTimeout';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport useLang from '../../hooks/useLang';\nimport buildClassName from '../../util/buildClassName';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport useDebouncedCallback from \"../../hooks/useDebouncedCallback\";\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  }, [value]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = e.currentTarget.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      e.currentTarget.value = e.currentTarget.value.replace(/\\n/g, ' ');\n      e.currentTarget.selectionEnd = previousSelectionEnd;\n    }\n    e.currentTarget.style.height = '0';\n    e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        rows={3}\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","// DO NOT EDIT\nimport BaseMsg from '../BaseMsg';\nimport type { Pdu } from '../BaseMsg';\nimport type { PbMsg_Type } from './types';\n\nexport default class PbMsg extends BaseMsg {\n  public msg?: PbMsg_Type\n  constructor(msg?: PbMsg_Type) {\n    super('PTP.Common.PbMsg', msg);\n    this.msg = msg;\n  }\n  static parseMsg(pdu : Pdu): PbMsg_Type {\n    return new PbMsg().decode(pdu.body());\n  }\n}\n","// DO NOT EDIT\nimport BaseMsg from '../BaseMsg';\nimport type { Pdu } from '../BaseMsg';\nimport type { PbQrCode_Type } from './types';\n\nexport default class PbQrCode extends BaseMsg {\n  public msg?: PbQrCode_Type\n  constructor(msg?: PbQrCode_Type) {\n    super('PTP.Common.PbQrCode', msg);\n    this.msg = msg;\n  }\n  static parseMsg(pdu : Pdu): PbQrCode_Type {\n    return new PbQrCode().decode(pdu.body());\n  }\n}\n","// DO NOT EDIT\nimport BaseMsg from '../BaseMsg';\nimport type { Pdu } from '../BaseMsg';\nimport type { PbUser_Type } from './types';\n\nexport default class PbUser extends BaseMsg {\n  public msg?: PbUser_Type\n  constructor(msg?: PbUser_Type) {\n    super('PTP.Common.PbUser', msg);\n    this.msg = msg;\n  }\n  static parseMsg(pdu : Pdu): PbUser_Type {\n    return new PbUser().decode(pdu.body());\n  }\n}\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","\nexport function generateRandomString(length:number) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function sha1(str: string): string {\n  function utf8_encode(str: string): string {\n    str = str.replace(/\\r\\n/g, '\\n');\n    let utf8str = '';\n    for (let n = 0; n < str.length; n++) {\n      let c = str.charCodeAt(n);\n      if (c < 128) {\n        utf8str += String.fromCharCode(c);\n      } else if ((c > 127) && (c < 2048)) {\n        utf8str += String.fromCharCode((c >> 6) | 192);\n        utf8str += String.fromCharCode((c & 63) | 128);\n      } else {\n        utf8str += String.fromCharCode((c >> 12) | 224);\n        utf8str += String.fromCharCode(((c >> 6) & 63) | 128);\n        utf8str += String.fromCharCode((c & 63) | 128);\n      }\n    }\n    return utf8str;\n  }\n\n  function rotate_left(n: number, s: number): number {\n    return (n << s) | (n >>> (32 - s));\n  }\n\n  function cvt_hex(val: number): string {\n    let str = '';\n    let i;\n    let v;\n    for (i = 7; i >= 0; i--) {\n      v = (val >>> (i * 4)) & 0x0f;\n      str += v.toString(16);\n    }\n    return str;\n  }\n\n  let blockstart;\n\n  let i: number, j: number;\n\n  let W = new Array(80);\n\n  let H0 = 0x67452301;\n  let H1 = 0xEFCDAB89;\n  let H2 = 0x98BADCFE;\n  let H3 = 0x10325476;\n  let H4 = 0xC3D2E1F0;\n\n  let A, B, C, D, E;\n\n  let temp;\n\n  str = utf8_encode(str);\n\n  let len = str.length * 8;\n\n  let K = new Array(\n    0x5A827999,\n    0x6ED9EBA1,\n    0x8F1BBCDC,\n    0xCA62C1D6\n  );\n\n  let str_len = str.length;\n\n  let word_array = new Array();\n\n  for (i = 0; i < str_len - 3; i += 4) {\n    j =\n      (str.charCodeAt(i) << 24) |\n      (str.charCodeAt(i + 1) << 16) |\n      (str.charCodeAt(i + 2) << 8) |\n      str.charCodeAt(i + 3);\n    word_array.push(j);\n  }\n\n  switch (str_len % 4) {\n    case 0:\n      i = 0x080000000;\n      break;\n    case 1:\n      i = (str.charCodeAt(str_len - 1) << 24) | 0x0800000;\n      break;\n\n    case 2:\n      i =\n        (str.charCodeAt(str_len - 2) << 24) |\n        (str.charCodeAt(str_len - 1) << 16) |\n        0x08000;\n      break;\n\n    case 3:\n      i =\n        (str.charCodeAt(str_len - 3) << 24) |\n        (str.charCodeAt(str_len - 2) << 16) |\n        (str.charCodeAt(str_len - 1) << 8) |\n        0x80;\n      break;\n  }\n\n  word_array.push(i);\n\n  while (word_array.length % 16 != 14) word_array.push(0);\n\n  word_array.push(len >>> 32);\n  word_array.push(len & 0xffffffff);\n\n  for (blockstart = 0; blockstart < word_array.length; blockstart += 16) {\n    for (i = 0; i < 16; i++) W[i] = word_array[blockstart + i];\n    for (i = 16; i < 80; i++)\n      W[i] = rotate_left(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n    A = H0;\n    B = H1;\n    C = H2;\n    D = H3;\n    E = H4;\n\n    for (i = 0; i < 20; i++) {\n      temp =\n        (rotate_left(A, 5) + ((B & C) | (~B & D)) + E + W[i] + K[0]) &\n        0xffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n\n    for (i = 20; i < 40; i++) {\n      temp = (rotate_left(A, 5) + (B ^ C ^ D) + E + W[i] + K[1]) & 0xffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n\n    for (i = 40; i < 60; i++) {\n      temp =\n        (rotate_left(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + K[2]) &\n        0xffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n\n    for (i = 60; i < 80; i++) {\n      temp = (rotate_left(A, 5) + (B ^ C ^ D) + E + W[i] + K[3]) & 0xffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n\n    H0 = (H0 + A) & 0xffffffff;\n    H1 = (H1 + B) & 0xffffffff;\n    H2 = (H2 + C) & 0xffffffff;\n    H3 = (H3 + D) & 0xffffffff;\n    H4 = (H4 + E) & 0xffffffff;\n  }\n\n  let result =\n    cvt_hex(H0) + cvt_hex(H1) + cvt_hex(H2) + cvt_hex(H3) + cvt_hex(H4);\n  return result.toLowerCase();\n}\n\nexport function replaceSubstring(text:string, offset:number, length:number,replace:string) {\n  const prefix = text.substring(0, offset);\n  const suffix = text.substring(offset + length);\n  return prefix + replace + suffix;\n\n}\nexport function fetchWithTimeout(url: RequestInfo | URL, options: RequestInit | undefined, timeout = 10000) {\n  return Promise.race([\n    fetch(url, options),\n    new Promise((_, reject) =>\n      setTimeout(() => reject(new Error(`Timeout: ${timeout}s`)), timeout)\n    )\n  ]);\n}\n\nexport const isEmailValid = (email:string)=>{\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return re.test(email);\n}\n\nexport function parseQueryFromUrl(urlStr: string): { url: URL; query: Record<string, string> } {\n  const replacedUrl = urlStr.replace(/#/g, '?');\n  const url = new URL(replacedUrl);\n  const query = Array.from(url.searchParams.entries()).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: value,\n    }),\n    {}\n  );\n\n  return { url, query };\n}\n\n\nexport function getCorsHeader(Access_Control_Allow_Origin: string = '*',ContentType:string = \"application/json;charset=UTF-8\") {\n  return {\n    'content-type': ContentType,\n    'Access-Control-Allow-Origin': Access_Control_Allow_Origin,\n    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization, Accept',\n    'Access-Control-Allow-Credentials': 'true',\n  };\n}\n\nexport function ResponseJson(result: object, status = 200,Access_Control_Allow_Origin: string = '*') {\n  return new Response(JSON.stringify(result), {\n    status,\n    headers: {\n      ...getCorsHeader(Access_Control_Allow_Origin),\n    },\n  });\n}\n\nexport function currentTs(){\n  return Math.ceil(+(new Date)/1000)\n}\n\nexport function currentTs1000(){\n  return Math.ceil(+(new Date))\n}\n\nexport async function fileToArrayBuffer(file:File) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    reader.readAsArrayBuffer(file);\n  });\n}\nexport async function fileToBuffer(file:File) {\n  return new Promise<Buffer>((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      // @ts-ignore\n      const buffer = Buffer.from(reader.result);\n      resolve(buffer);\n    };\n    reader.onerror = reject;\n    reader.readAsArrayBuffer(file);\n  });\n}\n\nfunction downloadText(text:string, filename:string,type = \"text/json\") {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:'+type+';charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\nexport async function blobToArrayBuffer(blob:Blob):Promise<ArrayBuffer> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', () => {\n      // @ts-ignore\n      resolve(reader.result);\n    });\n    reader.readAsArrayBuffer(blob);\n  });\n}\n\nexport async function blobToBuffer(blob:Blob) {\n  const ab = await blobToArrayBuffer(blob);\n  return Buffer.from(ab)\n}\n"],"names":["memo","TrackingMonkey","code","codeLength","trackingDirection","isTracking","isBig","isFirstMonkeyLoaded","setIsFirstMonkeyLoaded","useState","isMobile","useAppLayout","trackningFramesPerSymbol","stickerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","useCallback","React","id","className","AnimatedSticker","size","STICKER_SIZE_TWO_FA","undefined","tgsUrl","LOCAL_TGS_URLS","play","onLoad","playSegment","startFrame","length","endFrame","getTrackingFrames","speed","noLoop","withGlobal","global","pick","AuthCode","authPhoneNumber","authIsCodeViaApp","authIsLoading","authError","setAuthCode","returnToAuthPhoneNumber","clearAuthError","getActions","lang","useLang","inputRef","useRef","setCode","setIsTracking","setTrackingDirection","useEffect","IS_TOUCH_ENV","current","focus","useHistoryBack","isActive","onBack","onCodeChange","e","currentTarget","target","value","replace","substr","onClick","role","tabIndex","title","renderText","InputText","ref","label","onInput","error","autoComplete","inputMode","Loading","AuthPassword","authHint","setAuthPassword","showPassword","setShowPassword","handleChangePasswordVisibility","isVisible","handleSubmit","password","MonkeyPassword","isPasswordVisible","PasswordForm","clearError","hint","isLoading","onChangePasswordVisibility","onSubmit","AuthRegister","signUp","uploadProfilePhoto","isButtonShown","setIsButtonShown","croppedFile","setCroppedFile","firstName","setFirstName","lastName","setLastName","handleFirstNameChange","event","handleLastNameChange","action","method","preventDefault","file","AvatarEditable","onChange","Button","type","ripple","handleTokenGoing","AuthRegisterEmail","showAuthError","updateGlobal","isOAuthLoginOk","setIsOAuthLoginOk","isRegMode","setIsRegMode","email","setEmail","TEST_USERNAME","isEmailValid","setPassword","TEST_PWD","passwordRepeat","setPasswordRepeat","passwordError","setPasswordError","passwordRepeatError","setPasswordRepeatError","setAuthIsLoading","showPasswordRepeat","setShowPasswordRepeat","toggleRegMode","handleEmailChange","handlePasswordChange","handlePasswordRepeatChange","handleChangePasswordRepeatVisibility","handleAuthOkJump","authState","handleAuthOk","token","user","localStorage","setItem","SESSION_TOKEN","JSON","stringify","query","parseQueryFromUrl","window","location","href","async","response","fetch","CLOUD_MESSAGE_API","headers","body","result","json","err_msg","handleToken","then","history","replaceState","split","finally","handleClose","getIsMobile","round","color","ariaLabel","passwordCheck","params","sha1","toString","pwd","onFocus","onInputChange","placeholder","style","src","github","alt","google","AuthSignPassword","session","mnemonic","setMnemonic","mnemonicError","setMnemonicError","showMnemonic","setShowMnemonic","getMaxLengthIndicator","t","trim","handleShowMnemonic","handleGenMnemonic","mnemonicObj","Mnemonic","getWords","handleUploadChange","files","qrcode","Decoder","blob","Blob","blobUrl","URL","createObjectURL","scan","data","catch","alert","handleUploadQrcode","document","querySelector","click","onChangeMnemonic","mnemonic_","startsWith","qrcodeData","qrcodeDataBuf","Buffer","from","decodeRes","PbQrCode","Pdu","QrCodeType","res","aesDecrypt","hashSha256","checkMnemonic","loadAllChats","listType","shouldReplace","TextArea","noReplaceNewlines","disabled","maxLength","maxLengthIndicator","isText","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","requestAnimationFrame","select","stopEvent","buildClassName","dir","isRtl","onKeyDown","stopPropagation","multiple","MIN_PASSWORD_LENGTH","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","PasswordMonkey","markFirstMonkeyLoaded","useFlag","isPeekShown","markPeekShown","stikerSize","isForForum","currentAvatarBlobUrl","selectedFile","setSelectedFile","croppedBlobUrl","setCroppedBlobUrl","handleAvatarCrop","croppedImg","revokeObjectURL","handleModalClose","labelClassName","accept","CropModal","onClose","cropperResultOptions","quality","format","circle","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","imgFile","cropContainer","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","initCropper","default","ensureCroppie","handleCropClick","blobToFile","Modal","isOpen","Boolean","hasCloseButton","dialogRef","isSlim","header","noBackdrop","noBackdropClose","children","onCloseAnimationEnd","onEnter","shouldSkipHistoryAnimations","shouldRender","transitionClassNames","useShowTransition","modalRef","disableDirectTextInput","enableDirectTextInput","captureKeyboardListeners","onEsc","element","handleKeyDown","key","focusableElements","Array","querySelectorAll","currentFocusedIndex","findIndex","em","isSameNode","activeElement","newFocusedIndex","shiftKey","addEventListener","removeEventListener","trapFocus","useEffectWithPrevDeps","prevIsOpen","classList","toggle","dispatchHeavyAnimationEvent","remove","fullClassName","Portal","success","readOnly","onKeyPress","onBlur","onPaste","textareaRef","labelText","textarea","scrollHeight","handleChange","previousSelectionEnd","selectionEnd","rows","htmlFor","callback","delay","savedCallback","useLayoutEffect","setTimeout","clearTimeout","PbMsg","BaseMsg","constructor","msg","super","this","static","pdu","decode","PbUser","counter","getIsDirectTextInputDisabled","replaceSubstring","text","offset","substring","test","urlStr","replacedUrl","searchParams","entries","reduce","acc","currentTs","Math","ceil","Date","currentTs1000","fileToBuffer","Promise","resolve","reject","reader","FileReader","onload","buffer","onerror","readAsArrayBuffer"],"sourceRoot":""}