{"version":3,"file":"2752.fc3c993bf3a55910f901.js","mappings":"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","sources":["webpack://wai/./src/lib/ptp/protobuf/BaseMsg.ts","webpack://wai/./src/lib/ptp/protobuf/protobuf.js"],"sourcesContent":["const PB = require('./protobuf');\n\nimport type {\n  ActionCommands\n} from './ActionCommands';\n\nlet bbStack: BytesType[] = [];\n\nexport interface BytesType {\n  bytes: Uint8Array;\n  offset: number;\n  limit: number;\n}\n\nexport function popByteBuffer() {\n  const bb = bbStack.pop();\n  if (!bb) return { bytes: new Uint8Array(64), offset: 0, limit: 0 };\n  bb.offset = bb.limit = 0;\n  return bb;\n}\n\nexport function toUint8Array(bb: BytesType) {\n  let bytes = bb.bytes;\n  let limit = bb.limit;\n  return bytes.length === limit ? bytes : bytes.subarray(0, limit);\n}\n\nexport function grow(bb: BytesType, count: number) {\n  let bytes = bb.bytes;\n  let offset = bb.offset;\n  let limit = bb.limit;\n  let finalOffset = offset + count;\n  if (finalOffset > bytes.length) {\n    let newBytes = new Uint8Array(finalOffset * 2);\n    newBytes.set(bytes);\n    bb.bytes = newBytes;\n  }\n  bb.offset = finalOffset;\n  if (finalOffset > limit) {\n    bb.limit = finalOffset;\n  }\n  return offset;\n}\n\nexport function advance(bb: BytesType, count: number) {\n  let offset = bb.offset;\n  if (offset + count > bb.limit) {\n    throw new Error('Read past limit');\n  }\n  bb.offset += count;\n  return offset;\n}\n\nexport function readInt32(bb: BytesType) {\n  let offset = advance(bb, 4);\n  let bytes = bb.bytes;\n  return (\n    (bytes[offset] << 24) |\n    (bytes[offset + 1] << 16) |\n    (bytes[offset + 2] << 8) |\n    bytes[offset + 3]\n  );\n}\n\nexport function writeInt32(bb: BytesType, value: number) {\n  let offset = grow(bb, 4);\n  let bytes = bb.bytes;\n  bytes[offset + 3] = value;\n  bytes[offset + 2] = value >> 8;\n  bytes[offset + 1] = value >> 16;\n  bytes[offset] = value >> 24;\n}\n\nexport function readInt16(bb: BytesType) {\n  let offset = advance(bb, 2);\n  let bytes = bb.bytes;\n\n  return (bytes[offset] << 8) | bytes[offset + 1];\n}\n\nexport function writeInt16(bb: BytesType, value: number) {\n  let offset = grow(bb, 2);\n  let bytes = bb.bytes;\n  bytes[offset + 1] = value;\n  bytes[offset] = value >> 8;\n}\n\nexport function readBytes(bb: BytesType, count: number) {\n  let offset = advance(bb, count);\n  return bb.bytes.subarray(offset, offset + count);\n}\n\nexport function writeBytes(bb: BytesType, buffer: Buffer) {\n  let offset = grow(bb, buffer.length);\n  bb.bytes.set(buffer, offset);\n}\n\nexport function wrapByteBuffer(bytes: Uint8Array) {\n  return { bytes, offset: 0, limit: bytes.length };\n}\n\nexport const HEADER_LEN: number = 16;\n\nexport interface Header {\n  length: number;\n  version: number;\n  flag: number;\n  command_id: number;\n  seq_num: number;\n  reversed: number;\n}\n\nexport class Pdu {\n  private _pbData: Uint8Array;\n  private _pbHeader: Header;\n  private _pbBody: Uint8Array;\n  private _bb: BytesType;\n\n  constructor(data?: Uint8Array) {\n    this._pbData = new Uint8Array();\n    this._pbBody = new Uint8Array();\n    this._bb = popByteBuffer();\n    this._pbHeader = {\n      length: 0,\n      version: 0,\n      flag: 0,\n      command_id: 0,\n      seq_num: 0,\n      reversed: 0,\n    };\n    if (data) {\n      this.setPbData(data);\n      this.readPbData();\n    }\n  }\n\n  getPbData(): Uint8Array {\n    return this._pbData;\n  }\n\n  setPbData(data: Uint8Array) {\n    this._pbData = data;\n  }\n\n  getPbDataLength(): number {\n    return this._pbData.length;\n  }\n\n  getPbBody(): Uint8Array {\n    return this._pbBody;\n  }\n  \n  body(): Uint8Array {\n    return this._pbBody;\n  }\n\n  getPbBodyLength(): number {\n    return this._pbBody.length;\n  }\n\n  setPbBody(body: Uint8Array) {\n    this._pbBody = body;\n  }\n\n  writeData(\n    body: Uint8Array,\n    command_id: ActionCommands,\n    seq_num: number = 0,\n    reversed: number = 0\n  ) {\n    this.setPbBody(body);\n\n    this._pbHeader = {\n      length: body.length + HEADER_LEN,\n      version: 0,\n      flag: 0,\n      command_id,\n      seq_num: seq_num,\n      reversed,\n    };\n    writeInt32(this._bb, this._pbHeader.length);\n    writeInt16(this._bb, this._pbHeader.version);\n    writeInt16(this._bb, this._pbHeader.flag);\n    writeInt16(this._bb, this._pbHeader.command_id);\n    writeInt16(this._bb, this._pbHeader.seq_num);\n    writeInt32(this._bb, this._pbHeader.reversed);\n    writeBytes(this._bb, Buffer.from(body));\n    this.setPbData(toUint8Array(this._bb));\n  }\n\n  public updateSeqNo(seq_num:number){\n    this._bb.offset = 10;\n    writeInt16(this._bb, seq_num);\n    this._pbHeader.seq_num = seq_num;\n  }\n  readPbData() {\n    const headerBb = wrapByteBuffer(this._pbData.slice(0, HEADER_LEN));\n    this._pbHeader.length = readInt32(headerBb);\n    this._pbHeader.version = readInt16(headerBb);\n    this._pbHeader.flag = readInt16(headerBb);\n    this._pbHeader.command_id = readInt16(headerBb);\n    this._pbHeader.seq_num = readInt16(headerBb);\n    this._pbHeader.reversed = readInt32(headerBb);\n    this.setPbBody(this._pbData.slice(HEADER_LEN, this._pbHeader.length));\n  }\n\n  getCommandId(): ActionCommands {\n    return this._pbHeader.command_id;\n  }\n\n  getReversed(): number {\n    return this._pbHeader.reversed;\n  }\n  getSeqNum(): number {\n    return this._pbHeader.seq_num;\n  }\n}\n\nlet seq_num = 0;\n\nexport default class BaseMsg {\n  private __cid?: any;\n  public msg?: any;\n  private __pb: any;\n  constructor(namespace: string, msg?: any) {\n    const t = namespace.split('.');\n    let pb = PB.default;\n    do {\n      const k = t.shift();\n      // @ts-ignore\n      pb = pb[k];\n    } while (t.length > 0);\n    this.__pb = pb;\n    this.setMsg(msg);\n  }\n  protected setCommandId(cid: any) {\n    this.__cid = cid;\n  }\n  setMsg(msg: any) {\n    this.msg = msg;\n  }\n  getMsg() {\n    return this.msg;\n  }\n  encode(): Uint8Array {\n    return this.__E();\n  }\n  decode(data: Uint8Array) {\n    return this.__D(data);\n  }\n  pack(): Pdu {\n    return this.__pack();\n  }\n  toHex(): string {\n    return Buffer.from(this.__E()).toString('hex');\n  }\n  fromHex(hexStr: string): any {\n    if (hexStr.indexOf('0x') === 0) {\n      hexStr = hexStr.substring(2);\n    }\n    return this.__D(Buffer.from(hexStr, 'hex'));\n  }\n  protected __E(): Uint8Array {\n    const obj = this.__pb.create(this.getMsg());\n    return this.__pb.encode(obj).finish();\n  }\n  protected __D(data: Uint8Array): any {\n    const obj = this.__pb.decode(data);\n    return this.__pb.toObject(obj);\n  }\n  protected __pack(): Pdu {\n    const pdu = new Pdu();\n    if (seq_num > 10000) {\n      seq_num = 0;\n    }\n    pdu.writeData(this.__E(), this.__cid, ++seq_num);\n    return pdu;\n  }\n}\n\n","/**\n * DO NOT EDIT\n * -- this file is generated by minipbjs v0.2.5\n */\n\nconst protobuf = require(\"protobufjs/minimal\") ;\nprotobuf.util.Long = require('long');\nvar $root = protobuf.roots;\n\n// type system from protobuf\n// notice: minimal build protobuf library does not contains 'types'\nvar $wires = protobuf.types ? protobuf.types.basic : { 'double': 1, 'float': 5, 'int32': 0, 'uint32': 0, 'sint32': 0, 'fixed32': 5, 'sfixed32': 5, 'int64': 0, 'uint64': 0, 'sint64': 0, 'fixed64': 1, 'sfixed64': 1, 'bool': 0, 'string': 2, 'bytes': 2 };\nvar $packed = protobuf.types ? protobuf.types.packed : { 'double': 1, 'float': 5, 'int32': 0, 'uint32': 0, 'sint32': 0, 'fixed32': 5, 'sfixed32': 5, 'int64': 0, 'uint64': 0, 'sint64': 0, 'fixed64': 1, 'sfixed64': 1, 'bool': 0 };\nvar $types = Object.keys($wires);\n\nfunction invalid({ name, repeated, map, keyType }, expected) {\n    return name + ': ' + expected + (repeated && expected !== 'array' ? '[]' : map && expected !== 'object' ? '{k:'+keyType+'}' : '') + ' expected';\n}\nvar keyVerifyMap = { int32: 'key32Re', uint32: 'key32Re', sint32: 'key32Re', fixed32: 'key32Re', sfixed32: 'key32Re', int64: 'key64Re', uint64: 'key64Re', sint64: 'key64Re', fixed64: 'key64Re', sfixed64: 'key64Re', bool: 'key2Re' };\nfunction verifyKey(type, message, fieldInfo) {\n    if (keyVerifyMap[type]) {\n        if (!protobuf.util[keyVerifyMap[type]].test(message)) {\n            fieldInfo.keyType = type;\n            return invalid(fieldInfo, 'key')\n        }\n        return null;\n    }\n    return null;\n};\nvar type32Map = { int32: 1, uint32: 1, sint32: 1, fixed32: 1, sfixed32: 1 };\nvar type64Map = { int64: 1, uint64: 1, sint64: 1, fixed64: 1, sfixed64: 1 };\nvar floatOrDoubleMap = { float: 1, double: 1 };\nvar util = protobuf.util;\n\nvar $verifier = {\n    '$': function(type, message, fieldInfo, field) {\n        if (field === '$1') {\n            fieldInfo.map = true;\n            return verifyKey(type, message, fieldInfo);\n        }\n        // basic type\n        if ($wires[type] !== undefined) {\n            if (type32Map[type]) {\n                if (typeof message !== 'number') return invalid(fieldInfo, 'number');\n            } else if (type64Map[type]) {\n                if (!util.isInteger(message) && !(message && util.isInteger(message.low) && util.isInteger(message.high))) {\n                    return invalid(fieldInfo, 'integer|Long');\n                }\n            } else if (floatOrDoubleMap[type]) {\n                if (typeof message !== 'number') return invalid(fieldInfo, 'float|double');\n            } else if (type === 'bool') {\n                if (typeof message !== 'boolean') return invalid(fieldInfo, 'boolean');\n            } else if (type === 'string') {\n                if (!util.isString(message)) return invalid(fieldInfo, 'string');\n            } else if (type === 'bytes') {\n                if(!(message && typeof message.length ==='number' || util.isString(message))) {\n                    return invalid(fieldInfo, 'invalid bytes');\n                }\n            }\n            return null;\n        }\n        if ($root[type].resolvedType) return $root[type].resolvedType[message] ? null : invalid(fieldInfo, 'enum value');\n        return $root[type].verify(message);\n    },\n};\n// wrappers\nvar $reader = {\n    '$': function(type) {\n        if ($reader[type]) {\n            return $reader[type].call(this);\n        }\n        return $root[type].decode(this, this.uint32());\n    }\n}, $writer = {\n    '$': function(type, message, id) {\n        var wire = $wires[type];\n        if (wire === undefined) {\n            this.uint32((id << 3 | 2) >> 0).fork();\n            return $root[type].encode(message, this).ldelim();\n        }\n        return $writer[type].call(this.uint32(id << 3 | wire), message);\n    }\n};\n\nfor (var i = 0; i < $types.length; i ++) {\n    $reader[$types[i]] = protobuf.Reader.prototype[$types[i]];\n    $writer[$types[i]] = protobuf.Writer.prototype[$types[i]];\n}\n\nfunction $createConverter(cfgs) {\n    var converter = {};\n    for (var i = 0; i < cfgs.length; i ++) {\n        var cfg = cfgs[i];\n        for (var j = 0; j < cfg.types.length; j ++) {\n            converter[cfg.types[j]] = cfg.convf;\n        }\n    }\n    return converter;\n}\n\n// fromObject\nvar $conv_object = $createConverter([\n    {\n        'types': [ 'bool' ],\n        'convf': Boolean\n    }, {\n        'types': [ 'string' ],\n        'convf': String\n    }, {\n        'types': [ 'float', 'double' ],\n        'convf': Number\n    }, {\n        'types': [ 'uint32', 'fixed32' ],\n        'convf': function(value) { return value >>> 0; }\n    }, {\n        'types': [ 'int32', 'sint32', 'sfixed32' ],\n        'convf': function(value) { return value | 0; }\n    }, {\n        'types': [ 'int64', 'sint64', 'fixed64', 'sfixed64', 'uint64' ],\n        'convf': function(value, type) {\n            var ret = undefined;\n            if (protobuf.util.Long) {\n                ret = protobuf.util.Long.fromValue(value);\n                ret.unsigned = type.charAt(0) === 'u';\n            } else if (typeof value === 'object') {\n                ret = new protobuf.util.LongBits(value.low >>> 0, value.high >>> 0).toNumber(type.charAt(0) === 'u');\n            } else if (typeof value === 'string') {\n                ret = parseInt(value, 10);\n            } else if (typeof value === 'number') {\n                ret = value;\n            }\n            return ret;\n        }\n    }, {\n        'types': [ 'bytes' ],\n        'convf': function(value, type) {\n            var ret = undefined;\n            if (typeof value === 'string') {\n                ret = protobuf.util.newBuffer(protobuf.util.base64.length(value))\n                protobuf.util.base64.decode(value, ret, 0);\n            } else if (value.length) {\n                ret = value;\n            }\n            return ret;\n        }\n    }, {\n        'types': [ '$' ],\n        'convf': function(value, type) {\n            if ($conv_object[type]) {\n                return $conv_object[type].call(null, value, type);\n            } else if (!$root[type].fromObject) {\n                // enum\n                var ret = $root[type][value];\n                return typeof ret === 'string' ? $root[type][ret] : ret;\n            }\n            return $root[type].fromObject(value);\n        }\n    }\n]);\n\n// toObject\nvar $conv_message = $createConverter([\n    {\n        'types': [ 'float', 'double' ],\n        'convf': function(value, type, options) {\n            return options.json && !isFinite(value) ? String(value) : value;\n        }\n    }, {\n        'types': [ 'int64', 'sint64', 'fixed64', 'sfixed64', 'uint64' ],\n        'convf': function(value, type, options) {\n            if (typeof value === 'number') {\n                return options.longs === String ? String(value) : value;\n            }\n            if (options.longs === String) {\n                return protobuf.util.Long.prototype.toString.call(value);\n            } else if (options.longs === Number) {\n                return new protobuf.util.LongBits(value.low >>> 0, value.high >>> 0).toNumber(type.charAt(0) === 'u');\n            }\n            return value;\n        }\n    }, {\n        'types': [ 'bytes' ],\n        'convf': function(value, type, options) {\n            if (options.bytes === String) {\n                return protobuf.util.base64.encode(value, 0, value.length);\n            } else if (options.bytes === Array) {\n                return Array.prototype.slice.call(value);\n            }\n            if (Array.isArray(value)) {\n                return protobuf.util.newBuffer(value);\n            }\n            return value;\n        }\n    }, {\n        'types': [ '$' ],\n        'convf': function(value, type, options) {\n            if ($conv_message[type]) {\n                return $conv_message[type].call(null, value, type, options);\n            } else if ($wires[type] === undefined) {\n                if ($root[type].toObject) {\n                    return $root[type].toObject(value, options);\n                }\n                // enum\n                return options.enums === String ? $root[type][value] : value;\n            }\n            return value;\n        }\n    }\n]);\n\n// namespace builder\n(function _(namespace, path, parent, inner) {\n    for (var i = 0, keys = Object.keys(namespace); i < keys.length; i ++) {\n        var key = keys[i];\n        if (namespace[key]['$'] && Object.keys(namespace[key]['$']).every(function(k) { return Number(k); })) {\n            // protobuf.type\n            if (parent[key]) throw Error('field ' + path + '.' + key + ' has already existed');\n            parent[key] = function(payloads, key) {\n                /**\n                 * Constructor function wrapper for the all protobuf type.\n                 * @constructor\n                 * @param [props] Properties to set with\n                 */\n                function C(props) {\n                    for (var id in payloads) {\n                        var payload = payloads[id];\n                        // initialize object/array fields\n                        if (payload[1].charAt(0) === '{') {\n                            this[payload[0]] = {};\n                        } else if (payload[1].charAt(0) === '[' || payload[1].charAt(0) === '<') {\n                            this[payload[0]] = [];\n                            }\n                        }\n                        if (props) {\n                            for (var keys = Object.keys(props), i = 0; i < keys.length; ++i) {\n                                props[keys[i]] != null && (this[keys[i]] = props[keys[i]]);\n                        }\n                    }\n                }\n\n                // set prototypes and collect inner namespace for map fields\n                var $namespace = {};\n                for (var id in payloads) {\n                    var payload = payloads[id];\n                    var type = payload[1];\n                    if (type.charAt(0) === '{') {\n                        C.prototype[payload[0]] = protobuf.util.emptyObject;\n                        // collect all map fields\n                        // { key: value } => { '1': [ '$1', <key>, null ], '2': [ '$2', <value>, null ] }\n                        $namespace[type] = {\n                            '$': type.substring(1).split(',')\n                                .map(function(t, i) { return ['$' + (i + 1), t, null] })\n                                .reduce(function(m, o, i) { m[i + 1] = o; return m; }, {})\n                        };\n                    } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                        C.prototype[payload[0]] = protobuf.util.emptyArray;\n                    } else if (type === 'bytes') {\n                        C.prototype[payload[0]] = protobuf.util.newBuffer([]);\n                    } else {\n                        if (payload[2] && payload[2].hasOwnProperty('low') && payload[2].hasOwnProperty('high')) {\n                            C.prototype[payload[0]] = protobuf.util.Long.fromBits(payload[2].low, payload[2].high, payload[2].unsigned);\n                        } else {\n                            C.prototype[payload[0]] = payload[2];\n                        }\n                    }\n                }\n\n                /**\n                 * Creates a new instance using the specified properties.\n                 * @function create\n                 * @static\n                 * @param [props] Properties to set with\n                 * @returns {C} instance\n                 */\n                C.create = function(props) {\n                    return new parent[key](props);\n                };\n\n                /**\n                 * Decodes a message from the specified reader or buffer.\n                 * @function decode\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} length Message length if known beforehand\n                 * @returns {C} instance\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                C.decode = function(reader, length) {\n                    if (!(reader instanceof protobuf.Reader)) reader = protobuf.Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length;\n                    var message = new parent[key]();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        var id = tag >>> 3;\n                        if (id > 0 && payloads[id]) {\n                            var field = payloads[id][0];\n                            var type = payloads[id][1];\n                            if (type.charAt(0) === '{') {\n                                // map field\n                                if (message[field] === protobuf.util.emptyObject) {\n                                    message[field] = {};\n                                }\n                                // decode map fields from inner namespace\n                                var $message = parent[key].$namespace[type].decode(reader, reader.uint32());\n                                message[field][$message['$1']] = $message['$2'];\n                            } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                                // repeated field\n                                type = type.substring(1);\n                                if (!(message[field] && message[field].length)) {\n                                    message[field] = [];\n                                }\n                                if ($packed[type] !== undefined && (tag & /*2^3-1=*/7) === 2) {\n                                    // packed repeated\n                                    var $end = reader.uint32() + reader.pos;\n                                    while (reader.pos < $end) {\n                                        message[field].push($reader['$'].call(reader, type));\n                                    }\n                                } else {\n                                    message[field].push($reader['$'].call(reader, type));\n                                }\n                            } else {\n                                // non-repeated field\n                                message[field] = $reader['$'].call(reader, type);\n                            }\n                        } else {\n                            // unknown field\n                            reader.skipType(tag & /*2^3-1=*/7);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} length Message length if known beforehand\n                 * @returns {C} instance\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                C.decodeDelimited = function(reader) {\n                    if (!(reader instanceof protobuf.Reader)) reader = protobuf.Reader.create(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Encodes the specified C message. Does not implicitly verify messages.\n                 * @function encode\n                 * @static\n                 * @param {C} message or plain object to encode\n                 * @param {$protobuf.Writer} writer Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                C.encode = function(message, writer) {\n                    if (!writer) writer = protobuf.Writer.create();\n                    for (var id in payloads) {\n                        var field = payloads[id][0];\n                        var type = payloads[id][1];\n                        if (type.charAt(0) === '{') {\n                            // map field\n                            if (message[field] != null && message.hasOwnProperty(field)) {\n                                for (var i = 0, keys = Object.keys(message[field]); i < keys.length; ++ i) {\n                                    writer.uint32((id << 3 | 2) >> 0).fork();\n                                    // encode map fields from inner namespace\n                                    parent[key].$namespace[type].encode({ '$1': keys[i], '$2': message[field][keys[i]] }, writer).ldelim();\n                                }\n                            }\n                        } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                            // repeated field\n                            var packed = type.charAt(0) === '<';\n                            type = type.substring(1);\n                            var array = message[field];\n                            if (array != null && array.length) {\n                                if (packed && $packed[type] !== undefined) {\n                                    // packed repeated\n                                    writer.uint32((id << 3 | 2) >> 0).fork();\n                                    for (var i = 0; i < array.length; i ++) {\n                                        $writer[type].call(writer, array[i]);\n                                    }\n                                    writer.ldelim();\n                                } else {\n                                    for (var i = 0; i < array.length; i ++) {\n                                        $writer['$'].call(writer, type, array[i], id);\n                                    }\n                                }\n                            }\n                        } else {\n                            // non-repeated field\n                            if (message[field] != null && message.hasOwnProperty(field)) {\n                                $writer['$'].call(writer, type, message[field], id);\n                            }\n                        }\n                    }\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified C message, length delimited. Does not implicitly verify messages.\n                 * @function encode\n                 * @static\n                 * @param {C} message or plain object to encode\n                 * @param {$protobuf.Writer} writer Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                C.encodeDelimited = function(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Creates a C message from plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @param {C} message\n                 */\n                C.fromObject = function(object) {\n                    if (object instanceof parent[key]) return object;\n                    var message = new parent[key]();\n                    for (var id in payloads) {\n                        var field = payloads[id][0];\n                        var type = payloads[id][1];\n                        var property = object[field];\n                        if (type.charAt(0) === '{') {\n                            // map field\n                            if (!property) continue;\n                            if (typeof property !== 'object') throw TypeError(path + '.' + key + '.' + field + ': object expected');\n                            var map = {};\n                            var vtype = type.substring(1).split(',')[1];\n                            for (var i = 0, keys = Object.keys(property); i < keys.length; ++ i) {\n                                map[keys[i]] = $conv_object['$'].call(null, property[keys[i]], vtype);\n                            }\n                            message[field] = map;\n                        } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                            // repeated field\n                            if (!property) continue;\n                            if (!Array.isArray(property)) throw TypeError(path + '.' + key + '.' + type + ': arary excepted');\n                            var array = [];\n                            type = type.substring(1);\n                            for (var i = 0; i < property.length; i ++) {\n                                array[i] = $conv_object['$'].call(null, property[i], type);\n                            }\n                            message[field] = array;\n                        } else {\n                            // non-repeated field\n                            if (property != null) {\n                                message[field] = $conv_object['$'].call(null, property, type);\n                            }\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a C message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @static\n                 * @param {C} message protobuf message\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                C.toObject = function(message, options) {\n                    options = options || {};\n                    var object = {};\n                    for (var id in payloads) {\n                        var field = payloads[id][0];\n                        var type = payloads[id][1];\n                        var property = message[field];\n                        if (type.charAt(0) === '{') {\n                            // map field\n                            if (options.objects || options.defaults) {\n                                object[field] = {};\n                            }\n                            var keys = property ? Object.keys(property) : [];\n                            if (keys.length) {\n                                var map = {};\n                                var vtype = type.substring(1).split(',')[1];\n                                for (var i = 0; i < keys.length; i ++) {\n                                    map[keys[i]] = $conv_message['$'].call(null, property[keys[i]], vtype, options);\n                                }\n                                object[field] = map;\n                            }\n                        } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                            // repeated field\n                            if (options.arrays || options.defaults) {\n                                object[field] = [];\n                            }\n                            if (property && property.length) {\n                                var array = [];\n                                type = type.substring(1);\n                                for (var i = 0; i < property.length; i ++) {\n                                    array[i] = $conv_message['$'].call(null, property[i], type, options);\n                                }\n                                object[field] = array;\n                            }\n                        } else {\n                            // non-repeated field\n                            // TODO support for Enum type\n                            if (options.defaults) {\n                                object[field] = $conv_message['$'].call(null, payloads[id][2], type, options);\n                            }\n                            if (property != null && message.hasOwnProperty(field)) {\n                                object[field] = $conv_message['$'].call(null, property, type, options);\n                            }\n                        }\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this C to JSON.\n                 * @function toJSON\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                C.prototype.toJSON = function() {\n                    return this.constructor.toObject(this, protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * Verifies C message.\n                 * @function verify\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                C.verify = function(message) {\n                    if (typeof message !=='object' || message === null) return 'object expected'\n                    for (var id in payloads) {\n                        var field = payloads[id][0];\n                        var type = payloads[id][1];\n                        var fieldName = path + '.' + key + '.' + field;\n                        if (type.charAt(0) === '{') {\n                            // map field\n                            if (message[field] != null && message.hasOwnProperty(field)) {\n                                if (!protobuf.util.isObject(message[field])) return invalid({ name: fieldName, map: true }, 'object');\n                                var keys = Object.keys(message[field]);\n                                for (var i = 0; i < keys.length; ++i) {\n                                    parent[key].$namespace[type].$fieldName = fieldName\n                                    var error = parent[key].$namespace[type].verify({ '$1': keys[i], '$2': message[field][keys[i]] });\n                                    if (error) return error;\n                                }\n                            }\n                        } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                            // repeated field\n                            type = type.substring(1);\n                            var array = message[field];\n                            if (!Array.isArray(array)) {\n                                return invalid({ name: fieldName, repeated: true }, 'array')\n                            }\n                            for (var i = 0; i < array.length; i ++) {\n                                var error = $verifier['$'](type, array[i], { name: fieldName + '['+i+']' , repeated: true });\n                                if (error) return error;\n                            }\n                        } else {\n                            // non-repeated field\n                            if (field === '$1' || field === '$2') fieldName = this.$fieldName;\n                            if (message[field] != null && message.hasOwnProperty(field)) {\n                                var error = $verifier['$'](type, message[field], { name: fieldName }, field);\n                                if (error) return error;\n                            }\n                        }\n                    }\n                    return null;\n                };\n\n                // create inner namespace for each map field\n                if (Object.keys($namespace).length) {\n                    C.$namespace = _($namespace, path + '.' + key, C.$namespace || {}, true);\n                }\n\n                return C;\n            }(namespace[key]['$'], key);\n\n            // exposing non-inner type to $root\n            !inner && ($root[path + '.' + key] = parent[key]);\n        } else if (namespace[key]['@'] && Object.values(namespace[key]['@']).every(function(v) { return Number(v) === v; })) {\n            // protobuf.enum\n            parent[key] = function(payloads, key) {\n                var keys = Object.keys(payloads);\n                var values = {};\n                for (var i = 0; i < keys.length; i ++) {\n                    values[values[keys[i]] = payloads[keys[i]]] = keys[i];\n                }\n                var vals = {};\n                keys.forEach(function (i) { vals[values[i]] = 1; });\n                values.resolvedType = vals;\n                return values;\n            }(namespace[key]['@'], key);\n            // exposing non-inner enum to $root\n            !inner && ($root[path + '.' + key] = parent[key]);\n        }\n        // delete parsed type and enum\n        delete namespace[key]['$'];\n        delete namespace[key]['@'];\n        parent[key] = _(namespace[key], path ? path + '.' + key : key, parent[key] || {});\n    }\n    return parent;\n})({\n    default: {\n        PTP: {\n            Auth: {\n                AuthLoginReq: {\n                    '$': {\"1\":[\"sign\",\"bytes\",[]],\"2\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"3\":[\"uid\",\"string\",\"\"],\"4\":[\"address\",\"string\",\"\"]}\n                },\n                AuthLoginRes: {\n                    '$': {\"1\":[\"payload\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                },\n                AuthNativeReq: {\n                    '$': {\"1\":[\"accountId\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"2\":[\"entropy\",\"string\",\"\"],\"3\":[\"session\",\"string\",\"\"]}\n                },\n                AuthNativeRes: {\n                    '$': {}\n                },\n                AuthPreLoginReq: {\n                    '$': {\"1\":[\"sign1\",\"bytes\",[]],\"2\":[\"address1\",\"string\",\"\"],\"3\":[\"sign2\",\"bytes\",[]],\"4\":[\"address2\",\"string\",\"\"],\"5\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}]}\n                },\n                AuthPreLoginRes: {\n                    '$': {\"1\":[\"uid\",\"string\",\"\"],\"2\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"100\":[\"err\",\"uint32\",0]}\n                },\n                AuthStep1Req: {\n                    '$': {\"1\":[\"p\",\"bytes\",[]]}\n                },\n                AuthStep1Res: {\n                    '$': {\"1\":[\"q\",\"bytes\",[]],\"2\":[\"address\",\"string\",\"\"],\"3\":[\"sign\",\"bytes\",[]],\"6\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"100\":[\"err\",\"uint32\",0]}\n                },\n                AuthStep2Req: {\n                    '$': {\"1\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"2\":[\"address\",\"string\",\"\"],\"3\":[\"sign\",\"bytes\",[]]}\n                },\n                AuthStep2Res: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                UpdateProfileReq: {\n                    '$': {\"1\":[\"firstName\",\"string\",\"\"],\"2\":[\"lastName\",\"string\",\"\"],\"3\":[\"about\",\"string\",\"\"]}\n                },\n                UpdateProfileRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                UpdateUsernameReq: {\n                    '$': {\"1\":[\"username\",\"string\",\"\"]}\n                },\n                UpdateUsernameRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                UploadProfilePhotoReq: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"is_video\",\"bool\",false],\"3\":[\"thumbnail\",\"string\",\"\"]}\n                },\n                UploadProfilePhotoRes: {\n                    '$': {\"1\":[\"payload\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            Chats: {\n                LoadChatsReq: {\n                    '$': {\"1\":[\"limit\",\"uint32\",0],\"2\":[\"offsetDate\",\"uint32\",0],\"3\":[\"archived\",\"bool\",false],\"4\":[\"withPinned\",\"bool\",false],\"5\":[\"lastLocalServiceMessage\",\"string\",\"\"]}\n                },\n                LoadChatsRes: {\n                    '$': {\"1\":[\"payload\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            Common: {\n                AUTH_TYPE: {\n                    '@': {\"AUTH_TYPE_USERNAME\":0,\"AUTH_TYPE_EMAIL\":1,\"AUTH_TYPE_MOBILE\":2}\n                },\n                EncryptType: {\n                    '@': {\"EncryptType_Wallet\":0,\"EncryptType_Group\":1,\"EncryptType_Message\":2,\"EncryptType_Media\":3}\n                },\n                ERR: {\n                    '@': {\"NO_ERROR\":0,\"ERR_SYSTEM\":1,\"ERR_AUTH_LOGIN\":2,\"ERR_AUTH_NEED\":3}\n                },\n                FileInfo: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"size\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"3\":[\"part\",\"uint32\",0],\"4\":[\"part_total\",\"uint32\",0],\"5\":[\"buf\",\"bytes\",[]],\"6\":[\"type\",\"string\",\"\"]}\n                },\n                MessageStoreRow: {\n                    '$': {\"1\":[\"message\",\"default.PTP.Common.PbMsg\",null],\"3\":[\"messageId\",\"uint32\",0],\"4\":[\"time\",\"uint32\",0],\"5\":[\"buf\",\"bytes\",[]]}\n                },\n                PbAction: {\n                    '$': {\"1\":[\"text\",\"string\",\"\"],\"2\":[\"type\",\"string\",\"\"]}\n                },\n                PbAiBot: {\n                    '$': {\"1\":[\"chatGptConfig\",\"default.PTP.Common.PbChatGpBotConfig\",null],\"3\":[\"enableAi\",\"bool\",false],\"4\":[\"botApi\",\"string\",\"\"],\"5\":[\"disableClearHistory\",\"bool\",false]}\n                },\n                PbAudio: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"size\",\"[uint32\",null],\"3\":[\"duration\",\"[uint32\",null],\"5\":[\"mimeType\",\"string\",\"\"],\"6\":[\"fileName\",\"string\",\"\"],\"7\":[\"performer\",\"string\",\"\"],\"8\":[\"title\",\"string\",\"\"],\"9\":[\"thumbnailSizes\",\"<default.PTP.Common.PbSizes\",null]}\n                },\n                PbBotInfo: {\n                    '$': {\"1\":[\"botId\",\"string\",\"\"],\"2\":[\"description\",\"string\",\"\"],\"4\":[\"menuButton\",\"default.PTP.Common.PbMenuButton\",null],\"5\":[\"commands\",\"<default.PTP.Common.PbCommands\",null],\"6\":[\"photo\",\"default.PTP.Common.PbPhoto\",null],\"7\":[\"aiBot\",\"default.PTP.Common.PbAiBot\",null]}\n                },\n                PbChat: {\n                    '$': {\"1\":[\"type\",\"string\",\"\"],\"2\":[\"id\",\"string\",\"\"],\"3\":[\"title\",\"string\",\"\"],\"4\":[\"usernames\",\"<default.PTP.Common.PbUsernames\",null],\"5\":[\"isMuted\",\"bool\",false],\"6\":[\"isMin\",\"bool\",false],\"7\":[\"hasPrivateLink\",\"bool\",false],\"8\":[\"isSignaturesShown\",\"bool\",false],\"9\":[\"accessHash\",\"string\",\"\"],\"10\":[\"isVerified\",\"bool\",false],\"11\":[\"isJoinToSend\",\"bool\",false],\"12\":[\"isJoinRequest\",\"bool\",false],\"13\":[\"isForum\",\"bool\",false],\"14\":[\"isListed\",\"bool\",false],\"15\":[\"settings\",\"default.PTP.Common.PbSettings\",null],\"16\":[\"lastMessage\",\"default.PTP.Common.PbMsg\",null]}\n                },\n                PbChatFolder: {\n                    '$': {\"1\":[\"id\",\"uint32\",0],\"2\":[\"title\",\"string\",\"\"],\"3\":[\"channels\",\"bool\",false],\"4\":[\"pinnedChatIds\",\"<string\",null],\"5\":[\"includedChatIds\",\"<string\",null],\"6\":[\"excludedChatIds\",\"<string\",null]}\n                },\n                PbChatGpBotConfig: {\n                    '$': {\"1\":[\"init_system_content\",\"string\",\"\"],\"2\":[\"api_key\",\"string\",\"\"],\"3\":[\"max_history_length\",\"uint32\",0],\"4\":[\"config\",\"default.PTP.Common.PbChatGptConfig\",null]}\n                },\n                PbChatGptConfig: {\n                    '$': {\"1\":[\"model\",\"string\",\"\"],\"2\":[\"temperature\",\"uint32\",0],\"3\":[\"max_tokens\",\"uint32\",0],\"4\":[\"presence_penalty\",\"uint32\",0]}\n                },\n                PbCommands: {\n                    '$': {\"1\":[\"botId\",\"string\",\"\"],\"2\":[\"command\",\"string\",\"\"],\"3\":[\"description\",\"string\",\"\"]}\n                },\n                PbContent: {\n                    '$': {\"1\":[\"text\",\"default.PTP.Common.PbText\",null],\"2\":[\"photo\",\"default.PTP.Common.PbPhoto\",null],\"3\":[\"voice\",\"default.PTP.Common.PbVoice\",null],\"4\":[\"action\",\"default.PTP.Common.PbAction\",null],\"5\":[\"document\",\"default.PTP.Common.PbDocument\",null],\"6\":[\"audio\",\"default.PTP.Common.PbAudio\",null]}\n                },\n                PbDimensions: {\n                    '$': {\"1\":[\"width\",\"uint32\",0],\"2\":[\"height\",\"uint32\",0]}\n                },\n                PbDocument: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"fileName\",\"string\",\"\"],\"3\":[\"size\",\"[uint32\",null],\"4\":[\"timestamp\",\"uint32\",0],\"5\":[\"duration\",\"[uint32\",null],\"6\":[\"mimeType\",\"string\",\"\"],\"7\":[\"performer\",\"string\",\"\"],\"8\":[\"previewBlobUrl\",\"string\",\"\"],\"9\":[\"mediaType\",\"string\",\"\"],\"10\":[\"mediaSize\",\"default.PTP.Common.PbSizes\",null],\"11\":[\"thumbnail\",\"default.PTP.Common.PbThumbnail\",null]}\n                },\n                PbFullInfo: {\n                    '$': {\"1\":[\"bio\",\"string\",\"\"],\"2\":[\"commonChatsCount\",\"uint32\",0],\"3\":[\"isBlocked\",\"bool\",false],\"4\":[\"noVoiceMessages\",\"bool\",false],\"5\":[\"botInfo\",\"default.PTP.Common.PbBotInfo\",null],\"6\":[\"pinnedMessageId\",\"uint32\",0]}\n                },\n                PbMenuButton: {\n                    '$': {\"1\":[\"type\",\"string\",\"\"],\"2\":[\"text\",\"string\",\"\"],\"3\":[\"url\",\"string\",\"\"]}\n                },\n                PbMessageEntity: {\n                    '$': {\"1\":[\"type\",\"string\",\"\"],\"2\":[\"offset\",\"uint32\",0],\"3\":[\"length\",\"uint32\",0],\"4\":[\"documentId\",\"string\",\"\"],\"5\":[\"userId\",\"string\",\"\"],\"6\":[\"url\",\"string\",\"\"],\"7\":[\"language\",\"string\",\"\"],\"8\":[\"cipher\",\"string\",\"\"],\"9\":[\"hint\",\"string\",\"\"]}\n                },\n                PbMsg: {\n                    '$': {\"1\":[\"id\",\"uint32\",0],\"2\":[\"chatId\",\"string\",\"\"],\"3\":[\"content\",\"default.PTP.Common.PbContent\",null],\"4\":[\"date\",\"uint32\",0],\"5\":[\"isOutgoing\",\"bool\",false],\"6\":[\"senderId\",\"string\",\"\"],\"7\":[\"isForwardingAllowed\",\"bool\",false],\"8\":[\"previousLocalId\",\"double\",0]}\n                },\n                PbPhoto: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"thumbnail\",\"default.PTP.Common.PbThumbnail\",null],\"3\":[\"sizes\",\"<default.PTP.Common.PbSizes\",null],\"4\":[\"isSpoiler\",\"bool\",false]}\n                },\n                PbQrCode: {\n                    '$': {\"1\":[\"type\",\"uint32\",1],\"2\":[\"data\",\"bytes\",[]]}\n                },\n                PbSettings: {\n                    '$': {\"1\":[\"isAutoArchived\",\"bool\",false],\"2\":[\"canReportSpam\",\"bool\",false],\"3\":[\"canAddContact\",\"bool\",false],\"4\":[\"canBlockContact\",\"bool\",false]}\n                },\n                PbSizes: {\n                    '$': {\"1\":[\"width\",\"uint32\",0],\"2\":[\"height\",\"uint32\",0],\"3\":[\"type\",\"string\",\"\"]}\n                },\n                PbText: {\n                    '$': {\"1\":[\"text\",\"string\",\"\"],\"2\":[\"entities\",\"<default.PTP.Common.PbMessageEntity\",null]}\n                },\n                PbThumbnail: {\n                    '$': {\"1\":[\"width\",\"uint32\",0],\"2\":[\"height\",\"uint32\",0],\"3\":[\"dataUri\",\"string\",\"\"]}\n                },\n                PbUser: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"firstName\",\"string\",\"\"],\"3\":[\"usernames\",\"<default.PTP.Common.PbUsernames\",null],\"4\":[\"isMin\",\"bool\",false],\"5\":[\"isPremium\",\"bool\",false],\"6\":[\"type\",\"string\",\"\"],\"7\":[\"hasVideoAvatar\",\"bool\",false],\"8\":[\"canBeInvitedToGroup\",\"bool\",false],\"9\":[\"phoneNumber\",\"string\",\"\"],\"10\":[\"noStatus\",\"bool\",false],\"11\":[\"accessHash\",\"string\",\"\"],\"12\":[\"fullInfo\",\"default.PTP.Common.PbFullInfo\",null],\"13\":[\"lastName\",\"string\",\"\"],\"14\":[\"isSelf\",\"bool\",false],\"15\":[\"avatarHash\",\"string\",\"\"],\"16\":[\"photos\",\"<default.PTP.Common.PbPhoto\",null]}\n                },\n                PbUsernames: {\n                    '$': {\"1\":[\"username\",\"string\",\"\"],\"2\":[\"isActive\",\"bool\",false],\"3\":[\"isEditable\",\"bool\",false]}\n                },\n                PbUserSetting: {\n                    '$': {\"1\":[\"chatFolders\",\"<default.PTP.Common.PbChatFolder\",null],\"2\":[\"chatFolderOrderedIds\",\"[uint32\",null],\"3\":[\"myBotIds\",\"<string\",null],\"4\":[\"myGroups\",\"<string\",null]}\n                },\n                PbVoice: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"waveform\",\"[uint32\",null],\"3\":[\"duration\",\"uint32\",0]}\n                },\n                QrCodeType: {\n                    '@': {\"QrCodeType_MNEMONIC\":1}\n                },\n                UserMessageStoreData: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"],\"2\":[\"messageIds\",\"[uint64\",null],\"3\":[\"messageIdsDeleted\",\"[uint64\",null],\"4\":[\"time\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}]}\n                },\n                UserStoreData: {\n                    '$': {\"1\":[\"chatIds\",\"<string\",null],\"2\":[\"chatIdsDeleted\",\"<string\",null],\"3\":[\"chatFolders\",\"string\",\"\"],\"7\":[\"time\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}]}\n                },\n                UserStoreRow: {\n                    '$': {\"1\":[\"buf\",\"bytes\",[]],\"2\":[\"userId\",\"string\",\"\"],\"3\":[\"time\",\"uint32\",0],\"4\":[\"user\",\"default.PTP.Common.PbUser\",null]}\n                }\n            },\n            File: {\n                DownloadReq: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"part\",\"uint32\",0]}\n                },\n                DownloadRes: {\n                    '$': {\"1\":[\"file\",\"default.PTP.Common.FileInfo\",null],\"100\":[\"err\",\"uint32\",0]}\n                },\n                UploadReq: {\n                    '$': {\"1\":[\"file\",\"default.PTP.Common.FileInfo\",null]}\n                },\n                UploadRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            Msg: {\n                AnswerCallbackButtonReq: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"],\"2\":[\"messageId\",\"uint32\",0],\"3\":[\"data\",\"string\",\"\"],\"4\":[\"accessHash\",\"string\",\"\"],\"5\":[\"isGame\",\"bool\",false]}\n                },\n                AnswerCallbackButtonRes: {\n                    '$': {\"1\":[\"message\",\"string\",\"\"],\"2\":[\"url\",\"string\",\"\"],\"3\":[\"alert\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                },\n                DownloadMsgReq: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"]}\n                },\n                DownloadMsgRes: {\n                    '$': {\"1\":[\"messages\",\"<default.PTP.Common.MessageStoreRow\",null],\"100\":[\"err\",\"uint32\",0]}\n                },\n                GenMsgIdReq: {\n                    '$': {\"1\":[\"isLocal\",\"bool\",false]}\n                },\n                GenMsgIdRes: {\n                    '$': {\"1\":[\"messageId\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"100\":[\"err\",\"uint32\",0]}\n                },\n                MsgDeleteReq: {\n                    '$': {\"1\":[\"user_id\",\"string\",\"\"],\"2\":[\"chat_id\",\"string\",\"\"],\"3\":[\"msg_ids\",\"[uint32\",null],\"4\":[\"revoke\",\"bool\",false]}\n                },\n                MsgDeleteRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                MsgListReq: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"],\"2\":[\"lastMessageId\",\"uint32\",0],\"3\":[\"limit\",\"uint32\",0],\"4\":[\"isUp\",\"bool\",false]}\n                },\n                MsgListRes: {\n                    '$': {\"1\":[\"payload\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                },\n                MsgUpdateReq: {\n                    '$': {\"1\":[\"user_id\",\"string\",\"\"],\"2\":[\"chat_id\",\"string\",\"\"],\"3\":[\"msg_id\",\"uint32\",0],\"4\":[\"text\",\"string\",\"\"]}\n                },\n                MsgUpdateRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                RemoveMessagesReq: {\n                    '$': {\"1\":[\"messageIds\",\"[uint32\",null]}\n                },\n                RemoveMessagesRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                SendReq: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"],\"2\":[\"text\",\"string\",\"\"],\"3\":[\"msg\",\"default.PTP.Common.PbMsg\",null]}\n                },\n                SendRes: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"],\"2\":[\"action\",\"string\",\"\"],\"3\":[\"msg\",\"default.PTP.Common.PbMsg\",null],\"4\":[\"text\",\"string\",\"\"],\"5\":[\"localId\",\"uint32\",0],\"100\":[\"err\",\"uint32\",0]}\n                },\n                UploadMsgReq: {\n                    '$': {\"1\":[\"messages\",\"<default.PTP.Common.MessageStoreRow\",null],\"2\":[\"chatId\",\"string\",\"\"],\"3\":[\"time\",\"uint32\",0]}\n                },\n                UploadMsgRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            Other: {\n                OtherNotify: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                StopChatStreamReq: {\n                    '$': {\"1\":[\"chatId\",\"uint32\",0],\"2\":[\"msgId\",\"uint32\",0]}\n                }\n            },\n            Sync: {\n                SyncReq: {\n                    '$': {\"1\":[\"userStoreData\",\"default.PTP.Common.UserStoreData\",null]}\n                },\n                SyncRes: {\n                    '$': {\"1\":[\"userStoreData\",\"default.PTP.Common.UserStoreData\",null],\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            User: {\n                DownloadUserReq: {\n                    '$': {\"1\":[\"userIds\",\"<string\",null]}\n                },\n                DownloadUserRes: {\n                    '$': {\"1\":[\"users\",\"<default.PTP.Common.UserStoreRow\",null],\"100\":[\"err\",\"uint32\",0]}\n                },\n                GenUserIdReq: {\n                    '$': {}\n                },\n                GenUserIdRes: {\n                    '$': {\"1\":[\"userId\",\"uint32\",0],\"100\":[\"err\",\"uint32\",0]}\n                },\n                UploadUserReq: {\n                    '$': {\"1\":[\"users\",\"<default.PTP.Common.UserStoreRow\",null],\"3\":[\"time\",\"uint32\",0]}\n                },\n                UploadUserRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                }\n            }\n        }\n    }\n}, '', $root, false);\n\n// exposing 'default' to global/window\nprotobuf.util.global['default'] = $root['default'];\n\n//module.exports = protobuf.util.global['default']\n\nexport default protobuf.util.global['default'];\n"],"names":["PB","require","bbStack","popByteBuffer","bb","pop","offset","limit","bytes","Uint8Array","toUint8Array","length","subarray","grow","count","finalOffset","newBytes","set","advance","Error","readInt32","writeInt32","value","readInt16","writeInt16","readBytes","writeBytes","buffer","wrapByteBuffer","Pdu","constructor","data","_defineProperty","this","_pbData","_pbBody","_bb","_pbHeader","version","flag","command_id","seq_num","reversed","setPbData","readPbData","getPbData","getPbDataLength","getPbBody","body","getPbBodyLength","setPbBody","writeData","Buffer","from","updateSeqNo","headerBb","slice","getCommandId","getReversed","getSeqNum","BaseMsg","namespace","msg","t","split","pb","default","shift","__pb","setMsg","setCommandId","cid","__cid","getMsg","encode","__E","decode","__D","pack","__pack","toHex","toString","fromHex","hexStr","indexOf","substring","obj","create","finish","toObject","pdu","protobuf","util","Long","$root","roots","$wires","types","basic","$packed","packed","$types","Object","keys","invalid","name","repeated","map","keyType","expected","keyVerifyMap","int32","uint32","sint32","fixed32","sfixed32","int64","uint64","sint64","fixed64","sfixed64","bool","type32Map","type64Map","floatOrDoubleMap","float","double","$verifier","type","message","fieldInfo","field","test","verifyKey","undefined","isInteger","low","high","isString","resolvedType","verify","$reader","call","$writer","id","wire","fork","ldelim","i","Reader","prototype","Writer","$createConverter","cfgs","converter","cfg","j","convf","$conv_object","Boolean","String","Number","ret","fromValue","unsigned","charAt","LongBits","toNumber","parseInt","newBuffer","base64","fromObject","$conv_message","options","json","isFinite","longs","Array","isArray","enums","_","path","parent","inner","key","every","k","payloads","C","props","payload","$namespace","emptyObject","reduce","m","o","emptyArray","hasOwnProperty","fromBits","reader","end","len","pos","tag","$message","$end","push","skipType","decodeDelimited","writer","array","encodeDelimited","object","property","TypeError","vtype","objects","defaults","arrays","toJSON","toJSONOptions","fieldName","isObject","$fieldName","error","values","v","vals","forEach","PTP","Auth","AuthLoginReq","AuthLoginRes","AuthNativeReq","AuthNativeRes","AuthPreLoginReq","AuthPreLoginRes","AuthStep1Req","AuthStep1Res","AuthStep2Req","AuthStep2Res","UpdateProfileReq","UpdateProfileRes","UpdateUsernameReq","UpdateUsernameRes","UploadProfilePhotoReq","UploadProfilePhotoRes","Chats","LoadChatsReq","LoadChatsRes","Common","AUTH_TYPE","EncryptType","ERR","FileInfo","MessageStoreRow","PbAction","PbAiBot","PbAudio","PbBotInfo","PbChat","PbChatFolder","PbChatGpBotConfig","PbChatGptConfig","PbCommands","PbContent","PbDimensions","PbDocument","PbFullInfo","PbMenuButton","PbMessageEntity","PbMsg","PbPhoto","PbQrCode","PbSettings","PbSizes","PbText","PbThumbnail","PbUser","PbUsernames","PbUserSetting","PbVoice","QrCodeType","UserMessageStoreData","UserStoreData","UserStoreRow","File","DownloadReq","DownloadRes","UploadReq","UploadRes","Msg","AnswerCallbackButtonReq","AnswerCallbackButtonRes","DownloadMsgReq","DownloadMsgRes","GenMsgIdReq","GenMsgIdRes","MsgDeleteReq","MsgDeleteRes","MsgListReq","MsgListRes","MsgUpdateReq","MsgUpdateRes","RemoveMessagesReq","RemoveMessagesRes","SendReq","SendRes","UploadMsgReq","UploadMsgRes","Other","OtherNotify","StopChatStreamReq","Sync","SyncReq","SyncRes","User","DownloadUserReq","DownloadUserRes","GenUserIdReq","GenUserIdRes","UploadUserReq","UploadUserRes","global"],"sourceRoot":""}